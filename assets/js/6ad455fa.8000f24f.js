"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[966],{5162:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(7294),s=t(4334);const r={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,s.Z)(r.tabItem,l),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>k});var a=t(7462),s=t(7294),r=t(4334),l=t(2466),i=t(6775),o=t(1980),u=t(7392),c=t(12);function d(e){return function(e){var n;return(null==(n=s.Children.map(e,(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:n.filter(Boolean))??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}function p(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=p(e),[l,i]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[o,u]=b({queryString:t,groupId:a}),[d,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,c.Nk)(t);return[a,(0,s.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),g=(()=>{const e=o??d;return m({value:e,tabValues:r})?e:null})();(0,s.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var g=t(2389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:n,block:t,selectedValue:i,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),p=e=>{const n=e.currentTarget,t=c.indexOf(n),a=u[t].value;a!==i&&(d(n),o(a))},m=e=>{var n;let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}null==(n=t)||n.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:l}=e;return s.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>c.push(e),onKeyDown:m,onClick:p},l,{className:(0,r.Z)("tabs__item",h.tabItem,null==l?void 0:l.className,{"tabs__item--active":i===n})}),t??n)})))}function y(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function E(e){const n=f(e);return s.createElement("div",{className:(0,r.Z)("tabs-container",h.tabList)},s.createElement(v,(0,a.Z)({},e,n)),s.createElement(y,(0,a.Z)({},e,n)))}function k(e){const n=(0,g.Z)();return s.createElement(E,(0,a.Z)({key:String(n)},e))}},7833:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(7294),s=t(4866),r=t(5162),l=t(9960),i=t(614);function o(e){let{pullRequest:n,branchSuffix:t}=e;return a.createElement(s.Z,null,a.createElement(r.Z,{value:"exercise",label:"Exercise",default:!0},a.createElement(i.Z,{language:"console"},`git switch exercises/${t}`),a.createElement(l.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/exercises/${t}/Exercise.java`},a.createElement("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"}))),a.createElement(r.Z,{value:"solution",label:"Solution"},a.createElement(i.Z,{language:"console"},`git switch solutions/${t}`),a.createElement(l.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/solutions/${t}/Exercise.java`},a.createElement("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"}))),a.createElement(r.Z,{value:"pullrequest",label:"Pull Request"},"Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du im Pull Request "," ",a.createElement(l.Z,{to:`https://github.com/jappuccini/java-exercises/pull/${n}/files?diff=split`},"PR#",n)))}},9254:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=t(7462),s=(t(7294),t(3905)),r=t(7833);const l={title:"InnerClasses02",description:""},i=void 0,o={unversionedId:"exercises/inner-classes/inner-classes02",id:"exercises/inner-classes/inner-classes02",title:"InnerClasses02",description:"",source:"@site/docs/exercises/inner-classes/inner-classes02.md",sourceDirName:"exercises/inner-classes",slug:"/exercises/inner-classes/inner-classes02",permalink:"/java-docs/exercises/inner-classes/inner-classes02",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exercises/inner-classes/inner-classes02.md",tags:[],version:"current",frontMatter:{title:"InnerClasses02",description:""},sidebar:"exercisesSidebar",previous:{title:"InnerClasses01",permalink:"/java-docs/exercises/inner-classes/inner-classes01"},next:{title:"InnerClasses03",permalink:"/java-docs/exercises/inner-classes/inner-classes03"}},u={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2}],d={toc:c},p="wrapper";function m(e){let{components:n,...t}=e;return(0,s.kt)(p,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Passe die Klassen ",(0,s.kt)("inlineCode",{parentName:"li"},"Company")," und ",(0,s.kt)("inlineCode",{parentName:"li"},"Employee")," aus \xdcbungsaufgabe\n",(0,s.kt)("a",{parentName:"li",href:"../exceptions/exceptions03"},"Exceptions03")," anhand des abgebildeten\nKlassendiagramms an"),(0,s.kt)("li",{parentName:"ul"},"Passe die ausf\xfchrbare Klasse aus \xdcbungsaufgabe\n",(0,s.kt)("a",{parentName:"li",href:"../exceptions/exceptions03"},"Exceptions03")," so an, dass sie fehlerfrei\nausgef\xfchrt werden kann"),(0,s.kt)("li",{parentName:"ul"},"Die Klasse Emplyee soll hierbei eine Element Klasse sein.")),(0,s.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,s.kt)("mermaid",{value:"classDiagram\n    Company *-- Employee\n    Employee o-- Person\n\n    class Company {\n        -name String\n        -employees ArrayList~Employee~\n        -numberOfEmployees int\n        +Company(name String)\n        +addEmployee(employee Employee) void\n        +print() void\n    }\n\n    class Person {\n        -name String\n        +Person(name String)\n        +getName() String\n    }\n\n    class Employee {\n        -employeeId int\n        -person Person\n        -salary int\n        +Employee(employeeId int, person Person, salary int)\n        +getEmployeeId() int\n        +getName() String\n        +setSalary(salary int) void\n        +getSalary() int\n        +print() void\n    }"}),(0,s.kt)(r.Z,{pullRequest:"55",branchSuffix:"inner-classes/02",mdxType:"Exercise"}))}m.isMDXComponent=!0}}]);