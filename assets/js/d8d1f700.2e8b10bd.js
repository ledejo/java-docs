"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[2382],{3905:(e,n,i)=>{i.d(n,{Zo:()=>d,kt:()=>g});var a=i(7294);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,a)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function s(e,n){if(null==e)return{};var i,a,t=function(e,n){if(null==e)return{};var i,a,t={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var o=a.createContext({}),m=function(e){var n=a.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},d=function(e){var n=m(e.components);return a.createElement(o.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var i=e.components,t=e.mdxType,r=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=m(i),p=t,g=u["".concat(o,".").concat(p)]||u[p]||c[p]||r;return i?a.createElement(g,l(l({ref:n},d),{},{components:i})):a.createElement(g,l({ref:n},d))}));function g(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=i.length,l=new Array(r);l[0]=p;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[u]="string"==typeof e?e:t,l[1]=s;for(var m=2;m<r;m++)l[m]=i[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,i)}p.displayName="MDXCreateElement"},8987:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>m});var a=i(7462),t=(i(7294),i(3905));const r={title:"Zoo",description:"",tags:["oo","enumerations","inheritance","polymorphy"]},l=void 0,s={unversionedId:"additional-material/exam-exercises1/zoo",id:"additional-material/exam-exercises1/zoo",title:"Zoo",description:"",source:"@site/docs/additional-material/exam-exercises1/zoo.md",sourceDirName:"additional-material/exam-exercises1",slug:"/additional-material/exam-exercises1/zoo",permalink:"/java-docs/additional-material/exam-exercises1/zoo",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/additional-material/exam-exercises1/zoo.md",tags:[{label:"oo",permalink:"/java-docs/tags/oo"},{label:"enumerations",permalink:"/java-docs/tags/enumerations"},{label:"inheritance",permalink:"/java-docs/tags/inheritance"},{label:"polymorphy",permalink:"/java-docs/tags/polymorphy"}],version:"current",frontMatter:{title:"Zoo",description:"",tags:["oo","enumerations","inheritance","polymorphy"]},sidebar:"additionalMaterialSidebar",previous:{title:"Kurs",permalink:"/java-docs/additional-material/exam-exercises1/student-course"},next:{title:"Klausuraufgaben Programmierung 2",permalink:"/java-docs/additional-material/exam-exercises2/"}},o={},m=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweis zur Klasse Bird",id:"hinweis-zur-klasse-bird",level:2},{value:"Hinweis zur Klasse Mammal",id:"hinweis-zur-klasse-mammal",level:2},{value:"Hinweis zur Klasse Fish",id:"hinweis-zur-klasse-fish",level:2},{value:"Hinweise zur Klasse Zoo",id:"hinweise-zur-klasse-zoo",level:2}],d={toc:m},u="wrapper";function c(e){let{components:n,...i}=e;return(0,t.kt)(u,(0,a.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine ausf\xfchrbare Klasse."),(0,t.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,t.kt)("mermaid",{value:"classDiagram\n    Zoo o-- Animal\n    Animal <|-- Mammal\n    Animal <|-- Bird\n    Animal <|-- Fish\n\n    class Zoo {\n        -name String\n        -animals ArrayList~Animal~\n        +Zoo(name String, animals ArrayList~Animal~)\n        +addAnimal(animal Animal) void\n        +getBiggestAnimal() Animal\n        +getFishesByColor(color String) ArrayList~Fish~\n    }\n\n    class Animal {\n        -description String\n        -sizeInM double\n        -weigthInKG double\n        +Animal(description String, sizeInM double, weigthInKG double)\n    }\n\n    class Mammal {\n        +Mammal(description String, sizeInM double, weigthInKG double)\n        +suckle() void\n    }\n\n    class Bird {\n        +Bird(description String, sizeInM double, weigthInKG double)\n        +fly() void\n    }\n\n    class Fish {\n        +Fish(description String, sizeInM double, weigthInKG double)\n        +swim() void\n    }"}),(0,t.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und Object-Methoden dargestellt"),(0,t.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die Object-Methoden wie gewohnt implementiert werden")),(0,t.kt)("h2",{id:"hinweis-zur-klasse-bird"},"Hinweis zur Klasse Bird"),(0,t.kt)("p",null,"Die Methode ",(0,t.kt)("inlineCode",{parentName:"p"},"void fly()")," soll die Zeichenkette ",(0,t.kt)("em",{parentName:"p"},"flatter, flatter")," ausgeben."),(0,t.kt)("h2",{id:"hinweis-zur-klasse-mammal"},"Hinweis zur Klasse Mammal"),(0,t.kt)("p",null,"Die Methode ",(0,t.kt)("inlineCode",{parentName:"p"},"void suckle()")," soll die Zeichenkette ",(0,t.kt)("em",{parentName:"p"},"saug, saug")," ausgeben."),(0,t.kt)("h2",{id:"hinweis-zur-klasse-fish"},"Hinweis zur Klasse Fish"),(0,t.kt)("p",null,"Die Methode ",(0,t.kt)("inlineCode",{parentName:"p"},"void swim()")," soll die Zeichenkette ",(0,t.kt)("em",{parentName:"p"},"schwimm, schwimm")," ausgeben."),(0,t.kt)("h2",{id:"hinweise-zur-klasse-zoo"},"Hinweise zur Klasse Zoo"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"void addAnimal(animal: Animal)")," soll dem Zoo das eingehende Tier hinzuf\xfcgen"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"Animal getBiggestAnimal()")," soll das gr\xf6\xdfte Tier des Zoos zur\xfcckgeben"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"ArrayList<Fish> getFishesByColor(color: String)")," soll alle Fische des Zoos zur eingehenden Farbe zur\xfcckgeben")))}c.isMDXComponent=!0}}]);