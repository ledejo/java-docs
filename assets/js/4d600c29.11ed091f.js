"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[9216],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>p});var a=r(7294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var o=a.createContext({}),g=function(e){var n=a.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},c=function(e){var n=g(e.components);return a.createElement(o.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=g(r),m=t,p=d["".concat(o,".").concat(m)]||d[m]||u[m]||i;return r?a.createElement(p,s(s({ref:n},c),{},{components:r})):a.createElement(p,s({ref:n},c))}));function p(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,s=new Array(i);s[0]=m;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[d]="string"==typeof e?e:t,s[1]=l;for(var g=2;g<i;g++)s[g]=r[g];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1545:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var a=r(7462),t=(r(7294),r(3905));const i={title:"Tiefgarage",description:"",tags:["oo","inheritance","polymorphy"]},s=void 0,l={unversionedId:"exam-exercises/exam-exercises-java1/parking-garage",id:"exam-exercises/exam-exercises-java1/parking-garage",title:"Tiefgarage",description:"",source:"@site/docs/exam-exercises/exam-exercises-java1/parking-garage.md",sourceDirName:"exam-exercises/exam-exercises-java1",slug:"/exam-exercises/exam-exercises-java1/parking-garage",permalink:"/java-docs/exam-exercises/exam-exercises-java1/parking-garage",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java1/parking-garage.md",tags:[{label:"oo",permalink:"/java-docs/tags/oo"},{label:"inheritance",permalink:"/java-docs/tags/inheritance"},{label:"polymorphy",permalink:"/java-docs/tags/polymorphy"}],version:"current",frontMatter:{title:"Tiefgarage",description:"",tags:["oo","inheritance","polymorphy"]},sidebar:"examExercisesSidebar",previous:{title:"Geschenkesack",permalink:"/java-docs/exam-exercises/exam-exercises-java1/gift-bag"},next:{title:"Geometrische Form",permalink:"/java-docs/exam-exercises/exam-exercises-java1/shape"}},o={},g=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweise zur Klasse ParkingGarage",id:"hinweise-zur-klasse-parkinggarage",level:2}],c={toc:g},d="wrapper";function u(e){let{components:n,...r}=e;return(0,t.kt)(d,(0,a.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine\nausf\xfchrbare Klasse."),(0,t.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,t.kt)("mermaid",{value:"classDiagram\n    ParkingGarage o-- ParkingSpot\n    ParkingSpot o-- Vehicle\n    Vehicle <|-- Car\n    Vehicle <|-- Bus\n\n    class ParkingSpot {\n        -vehicle Vehicle\n        -lengthInM double\n        -heightInM double\n        -isForBusesOnly boolean\n        +ParkingSpot(lengthInM double, heightInM double, isForBusesOnly boolean)\n    }\n\n    class Vehicle {\n        -make String\n        -model String\n        -lengthInM double\n        -heightInM double\n        +Vehicle(make String, model String, lengthInM double, heightInM double)\n    }\n\n    class Car {\n        +Car(make String, model String, lengthInM double, heightInM double)\n    }\n\n    class Bus {\n        +Bus(make String, model String, lengthInM double, heightInM double)\n    }\n\n    class ParkingGarage {\n        -parkingSpots ParkingSpot[]\n        +ParkingGarage(numberOfParkingSpots int)\n        +parkIn(car Car, parkingSpotNumber int) String\n        +parkOut(car Car) String\n        +getNextFreeParkingSpotNumber() int\n    }"}),(0,t.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und\nObject-Methoden dargestellt"),(0,t.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die\nObject-Methoden wie gewohnt implementiert werden")),(0,t.kt)("h2",{id:"hinweise-zur-klasse-parkinggarage"},"Hinweise zur Klasse ParkingGarage"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"String parkIn(car: Car, parkingSpotNumber: int)")," soll das\neingehende Fahrzeug dem Parkplatz mit der eingehenden Parkplatznummer zuweisen\nund eine enstprechende Erfolgsmeldung zur\xfcckgegeben. F\xfcr den Fall, dass der\nParkplatz bereits besetzt ist, oder dass es sich bei dem eingehenden Fahrzeug\num ein Auto handelt, der Parkplatz aber nur f\xfcr Busse ist, oder dass der\nParkplatz zu klein ist, soll eine entsprechende Fehlermeldung zur\xfcckgegeben\nwerden"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"String parkOut(car: Car)"),' soll das eingehende Fahrzeug\n"ausparken" und eine enstsprechende Erfolgsmeldung zur\xfcckgeben. F\xfcr den Fall,\ndass das Fahrzeug in der Tiefgarage nicht vorhanden ist, soll eine\nentsprechende Fehlermeldung zur\xfcckgegeben werden'),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"int getNextFreeParkingSpotNumber()")," soll die Nummer des n\xe4chsten\nfreien Parkplatzes zur\xfcckgeben")))}u.isMDXComponent=!0}}]);