"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[7630],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,u=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=c(n),p=i,g=d["".concat(u,".").concat(p)]||d[p]||m[p]||s;return n?r.createElement(g,a(a({ref:t},l),{},{components:n})):r.createElement(g,a({ref:t},l))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:i,a[1]=o;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4832:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const s={title:"Kurs",description:"",tags:["oo","enumerations"]},a=void 0,o={unversionedId:"exam-exercises/exam-exercises-java1/student-course",id:"exam-exercises/exam-exercises-java1/student-course",title:"Kurs",description:"",source:"@site/docs/exam-exercises/exam-exercises-java1/student-course.md",sourceDirName:"exam-exercises/exam-exercises-java1",slug:"/exam-exercises/exam-exercises-java1/student-course",permalink:"/java-docs/exam-exercises/exam-exercises-java1/student-course",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java1/student-course.md",tags:[{label:"oo",permalink:"/java-docs/tags/oo"},{label:"enumerations",permalink:"/java-docs/tags/enumerations"}],version:"current",frontMatter:{title:"Kurs",description:"",tags:["oo","enumerations"]},sidebar:"examExercisesSidebar",previous:{title:"Geometrische Form",permalink:"/java-docs/exam-exercises/exam-exercises-java1/shape"},next:{title:"Zoo",permalink:"/java-docs/exam-exercises/exam-exercises-java1/zoo"}},u={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweis zur Klasse StudentCourse",id:"hinweis-zur-klasse-studentcourse",level:2}],l={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine ausf\xfchrbare Klasse."),(0,i.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,i.kt)("mermaid",{value:"classDiagram\n    StudyCourse o-- Student\n    StudyCourse o-- Lecture\n    StudyCourse o-- CourseOfStudies\n    Student o-- MatriculationNumber\n\n    class MatriculationNumber {\n        -digits int[]\n        +MatriculationNumber(digit1 int, digit2 int, digit3 int, digit4 int, digit5 int, digit6 int, digit7 int)\n    }\n\n    class Student {\n        -matriculationNumber MatriculationNumber\n        -name String\n        +Student(matriculationNumber int[7], name String)\n    }\n\n    class Lecture {\n        -code String\n        -description String\n        -creditPoints int\n        +Lecture(code String, description String, creditPoints int)\n    }\n\n    class StudyCourse {\n        -description String\n        -courseOfStudies CourseOfStudies\n        -lectures List~Lecture~\n        -students List~Student~\n        +StudyCourse(description String, courseOfStudies CourseOfStudies)\n        +addStudent(student Student) void\n        +addLecture(lecture Lecture) void\n        +getLectureWithMostCreditPoints() Lecture\n    }\n\n    class CourseOfStudies {\n        <<enumeration>>\n        WI = Wirtschaftsinformatik\n        INF = Informatik\n        BWL = BWL\n        -description String\n    }"}),(0,i.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und Object-Methoden dargestellt"),(0,i.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die Object-Methoden wie gewohnt implementiert werden")),(0,i.kt)("h2",{id:"hinweis-zur-klasse-studentcourse"},"Hinweis zur Klasse StudentCourse"),(0,i.kt)("p",null,"Die Methode ",(0,i.kt)("inlineCode",{parentName:"p"},"Lecture getLectureWithMostCreditPoints()")," soll die Vorlesung mit den meisten ECTS-Punkten zur\xfcckgeben."))}m.isMDXComponent=!0}}]);