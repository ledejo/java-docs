"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[1389],{9283:(e,n,t)=>{t.d(n,{Z:()=>a});var l=t(7294);function a(e){let{children:n,initSlides:t,width:a,height:r}=e;return(0,l.useEffect)((()=>{t()})),l.createElement("div",{className:"reveal",style:{width:a??"100vw",height:r??"100vh"}},l.createElement("div",{className:"slides"},n))}},9545:(e,n,t)=>{t.d(n,{O:()=>l});const l=()=>{const e=t(2199),n=t(7251),l=t(977),a=t(2489);new(t(9197))({plugins:[e,n,l,a]}).initialize({hash:!0})}},1983:(e,n,t)=>{t.d(n,{K:()=>a});var l=t(7294);const a=()=>l.createElement("p",{style:{fontSize:"8px",position:"absolute",bottom:0,right:0}},"*NKR")},6340:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});var l=t(7294),a=t(9283),r=t(1983),m=t(9545);function c(){return l.createElement(a.Z,{initSlides:m.O},l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Wiederholung"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"abstrakte Klassen"),l.createElement("li",{className:"fragment"},"abstrakte Methoden"),l.createElement("li",{className:"fragment"},"finale Klassen"),l.createElement("li",{className:"fragment"},"finale Methoden")))),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Variable Argumentlisten*"),l.createElement("p",{className:"fragment"},"werden als VarArgs bezeichnet"),l.createElement(r.K,null)),l.createElement("section",null,l.createElement("h2",null,"VarArgs"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"stehen am Ende der Parameterliste"),l.createElement("li",{className:"fragment"},"nur ein VarArgs Parameter je Methode"),l.createElement("li",{className:"fragment"},"VarArgs Parameter ist ein Array von einem Datentyp"),l.createElement("li",{className:"fragment"},"Argumente werden kommagetrennt definiert"))),l.createElement("section",null,l.createElement("p",null,"Implementieren einer Methode mit VarArgs"),l.createElement("pre",null,l.createElement("code",{className:"java","data-line-numbers":"1-5|1|2-4",dangerouslySetInnerHTML:{__html:"public void addCars(Car... cars) {\n  for(Car car : cars) {\n    System.out.println(car.getBrand());\n  }\n}"}}))),l.createElement("section",null,l.createElement("p",null,"Verwenden einer Methode mit VarArgs"),l.createElement("pre",null,l.createElement("code",{className:"java","data-line-numbers":"1-5|3-4",dangerouslySetInnerHTML:{__html:"public static void main(String[] args) {\n  //...\n  carManager.addCars(new Car(), new Car());\n  carManager.addCars(new Car());\n  //...\n}"}})))),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Interfaces")),l.createElement("section",null,l.createElement("p",null,"Wie kann man Dogs und Cats in einer Liste speichern?")),l.createElement("section",null,l.createElement("p",null,"Wie kann man Baby, Child und Adult in einer Liste speichern?")),l.createElement("section",null,l.createElement("p",null,"Wie kann man Dogs, Cats, Baby, Child und Adult in einer Liste speichern?")),l.createElement("section",null,l.createElement("p",null,"Limitierungen von abstrakten Klassen"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"komplexe Vererbungshierarchie"),l.createElement("li",{className:"fragment"},"keine Mehrfachvererbung"))),l.createElement("section",null,l.createElement("h2",null,"Interfaces"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"definieren Methoden und Attribute"),l.createElement("li",{className:"fragment"},"werden von Klassen implementiert"))),l.createElement("section",null,l.createElement("h2",null,"Zweck von Interfaces"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Unabh\xe4ngig von Vererbung"),l.createElement("li",{className:"fragment"},"Verstecken von Implementierungsdetails"),l.createElement("li",{className:"fragment"},"Schnittstelle zwischen Ersteller und Verwender"))),l.createElement("section",null,l.createElement("h2",null,"Ersteller des Warenkorbs"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Beschreibung anzeigen"),l.createElement("li",{className:"fragment"},"Einzelpreis ermitteln"))),l.createElement("section",null,l.createElement("h2",null,"Realisierung des Warenkorbs"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Warenkorb Modul definiert Interface"),l.createElement("li",{className:"fragment"},"Artikel implementieren das Interface"))),l.createElement("section",null,l.createElement("h2",null,"Demo"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"ShoppingCart"),l.createElement("li",{className:"fragment"},"Dog und Cat implementieren Interface"),l.createElement("li",{className:"fragment"},"ToDo Liste"),l.createElement("li",{className:"fragment"},"Dog und Cat implementieren Interface"))),l.createElement("section",null,l.createElement("h2",null,"weitere Anwendungsgebiete*"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Dependency Injection"),l.createElement("li",{className:"fragment"},"Unit Tests")),l.createElement("div",null,l.createElement(r.K,null)))),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Komparatoren")),l.createElement("section",null,l.createElement("h2",null,"Zweck von Komparatoren"),l.createElement("p",null,"Sortieren von Listen")),l.createElement("section",null,l.createElement("h2",null,"Funktionsweise"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Vergleichen von zwei Objekten"),l.createElement("li",{className:"fragment"},"Element davor einordnen: 1"),l.createElement("li",{className:"fragment"},"Element dahinter einordnen: -1"),l.createElement("li",{className:"fragment"},"Elemente gleich einordnen: 0"))),l.createElement("section",null,l.createElement("h2",null,"Welche Interfaces gibt es?"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Comparable"),l.createElement("li",{className:"fragment"},"Comparator"))),l.createElement("section",null,l.createElement("h2",null,"Comparable"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"definiert die Standardsortierung"),l.createElement("li",{className:"fragment"},"Implementierung in der Datenklasse"),l.createElement("li",{className:"fragment"},"Bsp. Human nach Alter sortieren"))),l.createElement("section",null,l.createElement("h2",null,"Comparator"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"definiert eine Sortierung"),l.createElement("li",{className:"fragment"},"Implementierung in eigener Klasse"),l.createElement("li",{className:"fragment"},"Bsp. AgeComparator, NameComparator"))),l.createElement("section",null,l.createElement("h2",null,"Wie sortiert man eine Liste?"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java","data-line-numbers":"2|3|4",dangerouslySetInnerHTML:{__html:"// ...\nArrayList&lt;Human&gt; humans = new ArrayList&lt;&gt;();\nCollections.sort(humans);\nCollections.sort(humans, new AgeComparator());\n// ..."}}))),l.createElement("section",null,l.createElement("h2",null,"Demo"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Human Comparable"),l.createElement("li",{className:"fragment"},"AgeComparator")))),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Rest of the day"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Interfaces 01"),l.createElement("li",{className:"fragment"},"Comparators 01 - 02")))))}}}]);