"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[7356],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>p});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=t.createContext({}),d=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=d(e.components);return t.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=d(r),p=a,f=m["".concat(o,".").concat(p)]||m[p]||u[p]||i;return r?t.createElement(f,l(l({ref:n},c),{},{components:r})):t.createElement(f,l({ref:n},c))}));function p(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=m;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var d=2;d<i;d++)l[d]=r[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6490:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var t=r(7462),a=(r(7294),r(3905));const i={title:"Personalverwaltung",description:"",tags:["exceptions","records","maps"]},l=void 0,s={unversionedId:"additional-material/exam-exercises2/human-resources",id:"additional-material/exam-exercises2/human-resources",title:"Personalverwaltung",description:"",source:"@site/docs/additional-material/exam-exercises2/human-resources.md",sourceDirName:"additional-material/exam-exercises2",slug:"/additional-material/exam-exercises2/human-resources",permalink:"/java-docs/additional-material/exam-exercises2/human-resources",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/additional-material/exam-exercises2/human-resources.md",tags:[{label:"exceptions",permalink:"/java-docs/tags/exceptions"},{label:"records",permalink:"/java-docs/tags/records"},{label:"maps",permalink:"/java-docs/tags/maps"}],version:"current",frontMatter:{title:"Personalverwaltung",description:"",tags:["exceptions","records","maps"]},sidebar:"additionalMaterialSidebar",previous:{title:"W\xf6rterbuch",permalink:"/java-docs/additional-material/exam-exercises2/dictionary"},next:{title:"Stellenangebot",permalink:"/java-docs/additional-material/exam-exercises2/job-offer"}},o={},d=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweise zur Klasse HumanResources",id:"hinweise-zur-klasse-humanresources",level:2}],c={toc:d};function u(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine ausf\xfchrbare Klasse und/oder eine Testklasse."),(0,a.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/212029467-d88f9b15-2314-49e5-a6f2-2027cefbd5d7.png",alt:"image"})),(0,a.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und Object-Methoden dargestellt"),(0,a.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die Object-Methoden wie gewohnt implementiert werden")),(0,a.kt)("h2",{id:"hinweise-zur-klasse-humanresources"},"Hinweise zur Klasse HumanResources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"void addTelephoneNumber(telephoneNumber: TelephoneNumber, person: Person)")," soll dem Telefonbuch (",(0,a.kt)("inlineCode",{parentName:"li"},"telephoneBook"),") die eingehende Telefonnummer als Schl\xfcssel\nsowie die eingehende Person als Wert hinzuf\xfcgen"),(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"void addStaff(person: Person)")," soll der Personalliste (",(0,a.kt)("inlineCode",{parentName:"li"},"staff"),") die eingehende Person hinzuf\xfcgen. F\xfcr den Fall, dass diese Person bereits in der\nPersonalliste vorhanden ist, soll die Ausnahme ",(0,a.kt)("inlineCode",{parentName:"li"},"DuplicateException")," ausgel\xf6st werden"),(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"ArrayList<TelephoneNumber> getTelephoneNumbersByPersonId(id: int)")," soll alle Telefonnummern zur eingehenden Personennummer zur\xfcckgeben")))}u.isMDXComponent=!0}}]);