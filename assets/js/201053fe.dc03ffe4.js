"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[5059],{9283:(e,n,t)=>{t.d(n,{Z:()=>a});var l=t(7294);function a(e){let{children:n,initSlides:t,width:a,height:r}=e;return(0,l.useEffect)((()=>{t()})),l.createElement("div",{className:"reveal reveal-viewport",style:{width:a??"100vw",height:r??"100vh"}},l.createElement("div",{className:"slides"},n))}},9545:(e,n,t)=>{t.d(n,{O:()=>l});const l=()=>{const e=t(2199),n=t(7251),l=t(977),a=t(2489);new(t(9197))({plugins:[e,n,l,a]}).initialize({hash:!0})}},5298:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});var l=t(7294),a=t(9283),r=t(9545);function c(){return l.createElement(a.Z,{initSlides:r.O},l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Agenda"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Records"),l.createElement("li",{className:"fragment"},"Optionals")))),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Records")),l.createElement("section",null,l.createElement("h2",null,"Records"),l.createElement("p",{className:"fragment"},"Ein Record ist eine Datenklasse, deren Attribute nicht ver\xe4ndert werden k\xf6nnen."),l.createElement("p",{className:"fragment"},"Eine Datenklasse hat somit finale Attribute und Getter.")),l.createElement("section",null,l.createElement("h2",null,"Beispiel Datenklasse Dog I"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Dog {\n final String name;\n final int age;\n\n public Dog(String name, int age) {\n  this.name = name;\n  this.age = age;\n }\n\n public String getName() {\n  return name;\n }\n// ...\n"}}))),l.createElement("section",null,l.createElement("h2",null,"Beispiel Datenklasse Dog II"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"// ...\n public int getAge() {\n  return age;\n }\n// weitere Methoden siehe Doku\n}\n"}}))),l.createElement("section",null,l.createElement("h2",null,"Beispiel Record Dog"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public record Dog(String name, int age) {}\n"}}))),l.createElement("section",null,l.createElement("h2",null,"Record"),l.createElement("p",{className:"fragment"},"Da ein Record von der Record-Klasse erbt, kann nicht von einer anderen Klasse geerbt werden."),l.createElement("p",{className:"fragment"},"Ein Record kann jedoch weitere Methoden haben und beliebig viele Schnittstellen implementieren.")),l.createElement("section",null,l.createElement("h2",null,"Record - Gratis Methoden"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Konstruktor"),l.createElement("li",{className:"fragment"},"Getter"),l.createElement("li",{className:"fragment"},"Equals"),l.createElement("li",{className:"fragment"},"hashCode"),l.createElement("li",{className:"fragment"},"toString"))),l.createElement("section",null,l.createElement("h2",null,"Demo"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Cat Klasse"),l.createElement("li",{className:"fragment"},"Dog Record"),l.createElement("li",{className:"fragment"},"height - Attribut"),l.createElement("li",{className:"fragment"},"isBig - Methode Record"))),l.createElement("section",null,l.createElement("h2",null,"Frag jetzt!"))),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Optionals")),l.createElement("section",null,l.createElement("h2",null,"Optional - Klasse"),l.createElement("p",{className:"fragment"},"Mit Hilfe der Optional Klasse kann man NullPointerExceptions einfach behandeln."),l.createElement("p",{className:"fragment"},"Was sind NullPointerExceptions?")),l.createElement("section",null,l.createElement("h2",null,"Null Pointer Exception I"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Dog {\n public String name;\n public Dog(String name) {\n  this.name = name;\n }\n}\n"}}))),l.createElement("section",null,l.createElement("h2",null,"Null Pointer Exception II"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:'public class Main {\n  public static void main(String[] args) {\n    Dog doggo = new Dog(null);\n    doggo.name.equals("Bello"); // funktioniert nicht\n }\n}\n'}}))),l.createElement("section",null,l.createElement("h2",null,"Optional als L\xf6sung"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Dog {\n public Optional&lt;String&gt; name;\n public Dog(String name) {\n  this.name = Optional.ofNullable(name);\n }\n}\n"}}))),l.createElement("section",null,l.createElement("h2",null,"Optional - Wrapper um den echten Wert"),l.createElement("p",{className:"fragment"},"Die Optional Klasse verpackt den echten Wert hinter Methoden."),l.createElement("p",{className:"fragment"},"Mithilfe von Methoden kann \xfcberpr\xfcft werden, ob ein Wert Null ist oder nicht."),l.createElement("p",{className:"fragment"},"Mit Lambdafunktionen kann abh\xe4ngig von der Pr\xe4senz des Wertes unterschiedliche Logik ausgef\xfchrt werden.")),l.createElement("section",null,l.createElement("h2",null,"Optional - Methoden I"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:'public class Main {\n  public static void main(String[] args) {\n    Optional&lt;String&gt; name = Name.createName();\n    if(name.isPresent()) {\n      System.out.println(name.get());\n    }\n    if(name.isEmpty()) {\n      System.out.println("No Name");\n    }\n }\n}\n'}}))),l.createElement("section",null,l.createElement("h2",null,"Optional - Methoden II"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:'public class Main {\n  public static void main(String[] args) {\n    Optional&lt;String&gt; name = Name.createName();\n    name.ifPresent((value) -> System.out.println(value));\n    name.ifPresentOrElse(\n      (value) -> System.out.println(value),\n      () -> System.out.println("No Name")\n    );\n  }\n}\n'}}))),l.createElement("section",null,l.createElement("h2",null,"Frag jetzt!")),l.createElement("section",null,l.createElement("h2",null,"Demo"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Human Middlename"),l.createElement("li",{className:"fragment"},"University Search Student"))),l.createElement("section",null,l.createElement("h2",null,"Frag jetzt!"))),l.createElement("section",null,l.createElement("h2",null,"Rest of the Day"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Wiederholung Java I"),l.createElement("li",{className:"fragment"},"Innere Klassen"))))}}}]);