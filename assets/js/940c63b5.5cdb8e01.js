"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[4985],{3905:(e,a,r)=>{r.d(a,{Zo:()=>u,kt:()=>f});var t=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function s(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=t.createContext({}),o=function(e){var a=t.useContext(d),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},u=function(e){var a=o(e.components);return t.createElement(d.Provider,{value:a},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},p=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=o(r),p=n,f=c["".concat(d,".").concat(p)]||c[p]||m[p]||i;return r?t.createElement(f,l(l({ref:a},u),{},{components:r})):t.createElement(f,l({ref:a},u))}));function f(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=p;var s={};for(var d in a)hasOwnProperty.call(a,d)&&(s[d]=a[d]);s.originalType=e,s[c]="string"==typeof e?e:n,l[1]=s;for(var o=2;o<i;o++)l[o]=r[o];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},9116:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var t=r(7462),n=(r(7294),r(3905));const i={title:"Kartenausteiler",description:"",tags:["oo","enumerations","io-streams"]},l=void 0,s={unversionedId:"additional-material/exam-exercises1/cards-dealer",id:"additional-material/exam-exercises1/cards-dealer",title:"Kartenausteiler",description:"",source:"@site/docs/additional-material/exam-exercises1/cards-dealer.md",sourceDirName:"additional-material/exam-exercises1",slug:"/additional-material/exam-exercises1/cards-dealer",permalink:"/java-docs/additional-material/exam-exercises1/cards-dealer",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/additional-material/exam-exercises1/cards-dealer.md",tags:[{label:"oo",permalink:"/java-docs/tags/oo"},{label:"enumerations",permalink:"/java-docs/tags/enumerations"},{label:"io-streams",permalink:"/java-docs/tags/io-streams"}],version:"current",frontMatter:{title:"Kartenausteiler",description:"",tags:["oo","enumerations","io-streams"]},sidebar:"additionalMaterialSidebar",previous:{title:"Klausuraufgaben Programmierung 1",permalink:"/java-docs/additional-material/exam-exercises1/"},next:{title:"Kassensystem",permalink:"/java-docs/additional-material/exam-exercises1/cashier-system"}},d={},o=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweise zur Klasse Player",id:"hinweise-zur-klasse-player",level:2},{value:"Hinweis zur Klasse CardsDealer",id:"hinweis-zur-klasse-cardsdealer",level:2},{value:"Hinweis zur Klasse CardsReader",id:"hinweis-zur-klasse-cardsreader",level:2},{value:"Beispielhafter Aufbau der Kartendatei",id:"beispielhafter-aufbau-der-kartendatei",level:2}],u={toc:o},c="wrapper";function m(e){let{components:a,...r}=e;return(0,n.kt)(c,(0,t.Z)({},u,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine ausf\xfchrbare Klasse."),(0,n.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://github.com/jappuccini/java-docs/assets/47243617/256c7fac-6eed-48cf-ba8f-70603987a697",alt:"image"})),(0,n.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und Object-Methoden dargestellt"),(0,n.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die Object-Methoden wie gewohnt implementiert werden")),(0,n.kt)("h2",{id:"hinweise-zur-klasse-player"},"Hinweise zur Klasse Player"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Die Methode ",(0,n.kt)("inlineCode",{parentName:"li"},"void addCard(card: Card)")," soll dem Spieler die eingehende Karte hinzuf\xfcgen"),(0,n.kt)("li",{parentName:"ul"},"Die Methode ",(0,n.kt)("inlineCode",{parentName:"li"},"ArrayList<Card> getCardsByColour(colour: String)")," soll alle Karten des Spielers zur eingehenden Farbe zur\xfcckgeben"),(0,n.kt)("li",{parentName:"ul"},"Die Methode ",(0,n.kt)("inlineCode",{parentName:"li"},"Card getCardWithHighestValue()")," soll die Karte des Spielers mit dem h\xf6chsten Wert zur\xfcckgeben")),(0,n.kt)("h2",{id:"hinweis-zur-klasse-cardsdealer"},"Hinweis zur Klasse CardsDealer"),(0,n.kt)("p",null,"Die Methode ",(0,n.kt)("inlineCode",{parentName:"p"},"void dealCards(amount: int)")," soll den beiden Spielern die eingehende Anzahl an zuf\xe4lligen Karten des Decks austeilen"),(0,n.kt)("h2",{id:"hinweis-zur-klasse-cardsreader"},"Hinweis zur Klasse CardsReader"),(0,n.kt)("p",null,"Die Methode ",(0,n.kt)("inlineCode",{parentName:"p"},"ArrayList<Card> getCards(file: File)")," soll alle Karten der eingehenden Datei zur\xfcckgeben."),(0,n.kt)("h2",{id:"beispielhafter-aufbau-der-kartendatei"},"Beispielhafter Aufbau der Kartendatei"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Karo;1\nKaro;2\nKaro;3\nKaro;4\nKaro;5\nHerz;1\nHerz;2\nHerz;3\nHerz;4\nHerz;5\nPik;1\nPik;2\nPik;3\nPik;4\nPik;5\nKreuz;1\nKreuz;2\nKreuz;3\nKreuz;4\nKreuz;5\n")))}m.isMDXComponent=!0}}]);