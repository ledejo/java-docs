"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[6101],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),d=a,g=p["".concat(u,".").concat(d)]||p[d]||m[d]||i;return t?r.createElement(g,o(o({ref:n},c),{},{components:t})):r.createElement(g,o({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6753:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const i={title:"Aufz\xe4hlungen (Enumerations)",description:"",sidebar_position:150,tags:["enumerations"]},o=void 0,l={unversionedId:"documentation/enumerations",id:"documentation/enumerations",title:"Aufz\xe4hlungen (Enumerations)",description:"",source:"@site/docs/documentation/enumerations.md",sourceDirName:"documentation",slug:"/documentation/enumerations",permalink:"/java-docs/documentation/enumerations",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/documentation/enumerations.md",tags:[{label:"enumerations",permalink:"/java-docs/tags/enumerations"}],version:"current",sidebarPosition:150,frontMatter:{title:"Aufz\xe4hlungen (Enumerations)",description:"",sidebar_position:150,tags:["enumerations"]},sidebar:"documentationSidebar",previous:{title:"Dateien und Verzeichnisse",permalink:"/java-docs/documentation/java-api/files"},next:{title:"Darstellung von Klassen und Programmabl\xe4ufen",permalink:"/java-docs/documentation/uml/"}},u={},s=[{value:"Implementieren von Aufz\xe4hlungen",id:"implementieren-von-aufz\xe4hlungen",level:2},{value:"Verwenden von Aufz\xe4hlungen",id:"verwenden-von-aufz\xe4hlungen",level:2}],c={toc:s},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Bei einer Aufz\xe4hlung (Enumeration) handelt es sich um eine spezielle Klasse, von\nder nur eine vorgegebene, endliche Anzahl an Instanzen existiert. Diese\nInstanzen werden als ",(0,a.kt)("em",{parentName:"p"},"Aufz\xe4hlungskonstanten")," bezeichnet. Technisch gesehen\nhandelt es sich bei Aufz\xe4hlungskonstanten um \xf6ffentliche, statische Konstanten\nvom Typ der Aufz\xe4hlung."),(0,a.kt)("h2",{id:"implementieren-von-aufz\xe4hlungen"},"Implementieren von Aufz\xe4hlungen"),(0,a.kt)("p",null,"Die Definition einer Aufz\xe4hlung erfolgt analog zur Definition von Klassen, das\nSchl\xfcsselwort hierf\xfcr lautet ",(0,a.kt)("inlineCode",{parentName:"p"},"enum"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="WeekDay.java" showLineNumbers',title:'"WeekDay.java"',showLineNumbers:!0},'public enum WeekDay {\n\n  MONDAY("Montag", true), TUESDAY("Dienstag", true), WEDNESDAY("Mittwoch", true), THURSDAY(\n      "Donnerstag",\n      true), FRIDAY("Freitag", true), SATURDAY("Samstag", true), SUNDAY("Sonntag", false);\n\n  private String description;\n  private boolean isWorkingDay;\n\n  WeekDay(String description, boolean isWorkingDay) {\n    this.description = description;\n    this.isWorkingDay = isWorkingDay;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public boolean getWorkingDay() {\n    return isWorkingDay;\n  }\n\n}\n')),(0,a.kt)("h2",{id:"verwenden-von-aufz\xe4hlungen"},"Verwenden von Aufz\xe4hlungen"),(0,a.kt)("p",null,"Aufz\xe4hlungen besitzen eine Reihe hilfreicher Methoden:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Die statische Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"T[] values()")," gibt alle Aufz\xe4hlunskonstanten als Feld\nzur\xfcck"),(0,a.kt)("li",{parentName:"ul"},"Die statische Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"T valueOf(name: String)")," gibt zu einer eingehenden\nZeichenkette die dazugeh\xf6rige Aufz\xe4hlungskonstante zur\xfcck"),(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"int ordinal()")," gibt die Ordnungszahl der Aufz\xe4hlungskonstanten\nzur\xfcck")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MainClass.java" showLineNumbers',title:'"MainClass.java"',showLineNumbers:!0},"public class MainClass {\n\n  public static void main(String[] args) {\n    for (WeekDay w : WeekDay.values()) {\n      System.out.println(w.ordinal());\n    }\n  }\n\n}\n")))}m.isMDXComponent=!0}}]);