"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[8169],{3905:(e,n,i)=>{i.d(n,{Zo:()=>d,kt:()=>h});var r=i(7294);function l(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function a(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,r)}return i}function t(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?a(Object(i),!0).forEach((function(n){l(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function s(e,n){if(null==e)return{};var i,r,l=function(e,n){if(null==e)return{};var i,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],n.indexOf(i)>=0||(l[i]=e[i]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(l[i]=e[i])}return l}var o=r.createContext({}),c=function(e){var n=r.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):t(t({},n),e)),i},d=function(e){var n=c(e.components);return r.createElement(o.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var i=e.components,l=e.mdxType,a=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(i),p=l,h=m["".concat(o,".").concat(p)]||m[p]||u[p]||a;return i?r.createElement(h,t(t({ref:n},d),{},{components:i})):r.createElement(h,t({ref:n},d))}));function h(e,n){var i=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=i.length,t=new Array(a);t[0]=p;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[m]="string"==typeof e?e:l,t[1]=s;for(var c=2;c<a;c++)t[c]=i[c];return r.createElement.apply(null,t)}return r.createElement.apply(null,i)}p.displayName="MDXCreateElement"},984:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=i(7462),l=(i(7294),i(3905));const a={title:"W\xfcrfelspiele",description:"",tags:["console-applications","oo","enumerations","inheritance","polymorphy"]},t=void 0,s={unversionedId:"exam-exercises/exam-exercises-java1/dice-games",id:"exam-exercises/exam-exercises-java1/dice-games",title:"W\xfcrfelspiele",description:"",source:"@site/docs/exam-exercises/exam-exercises-java1/dice-games.md",sourceDirName:"exam-exercises/exam-exercises-java1",slug:"/exam-exercises/exam-exercises-java1/dice-games",permalink:"/java-docs/exam-exercises/exam-exercises-java1/dice-games",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java1/dice-games.md",tags:[{label:"console-applications",permalink:"/java-docs/tags/console-applications"},{label:"oo",permalink:"/java-docs/tags/oo"},{label:"enumerations",permalink:"/java-docs/tags/enumerations"},{label:"inheritance",permalink:"/java-docs/tags/inheritance"},{label:"polymorphy",permalink:"/java-docs/tags/polymorphy"}],version:"current",frontMatter:{title:"W\xfcrfelspiele",description:"",tags:["console-applications","oo","enumerations","inheritance","polymorphy"]},sidebar:"examExercisesSidebar",previous:{title:"Kreatur",permalink:"/java-docs/exam-exercises/exam-exercises-java1/creature"},next:{title:"Fast Food",permalink:"/java-docs/exam-exercises/exam-exercises-java1/fast-food"}},o={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweis zur Klasse CardColorDice",id:"hinweis-zur-klasse-cardcolordice",level:2},{value:"Hinweis zur Klasse ValueDice",id:"hinweis-zur-klasse-valuedice",level:2},{value:"Hinweis zur Klasse ShadeSymbolDice",id:"hinweis-zur-klasse-shadesymboldice",level:2},{value:"Hinweise zur Klasse Player",id:"hinweise-zur-klasse-player",level:2},{value:"Hinweise zum W\xfcrfelspiel 1",id:"hinweise-zum-w\xfcrfelspiel-1",level:2},{value:"Hinweise zum W\xfcrfelspiel 2",id:"hinweise-zum-w\xfcrfelspiel-2",level:2}],d={toc:c},m="wrapper";function u(e){let{components:n,...i}=e;return(0,l.kt)(m,(0,r.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle f\xfcr jedes\nW\xfcrfelspiel eine ausf\xfchrbare Klasse."),(0,l.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,l.kt)("mermaid",{value:"classDiagram\n    Dice <|-- CardColorDice\n    Dice <|-- ValueDice\n    Dice <|-- ShapeSymbolDice\n    CardColorDice o-- CardColor\n    ShapeSymbolDice o-- ShapeSymbol\n\n    class Player {\n        -name String\n        -points int\n        +Player(name String, points int)\n        +addPoints(points int) void\n        +deductPoints(points int) void\n    }\n\n    class Dice {\n        +rollTheDice() void\n    }\n\n    class CardColorDice {\n        -cardColor CardColor\n        +rollTheDice() void\n    }\n\n    class ValueDice {\n        -value int\n        +rollTheDice() void\n    }\n\n    class ShapeSymbolDice {\n        -shapeSymbol ShapeSymbol\n        +rollTheDice() void\n    }\n\n    class CardColor {\n        <<enumeration>>\n        CLUBS = Kreuz, 1\n        SPADE = Pik, 2\n        HEARTS = Herz, 3\n        DIAMONDS = Karo, 4\n        -description String\n        -priority int\n    }\n\n    class ShapeSymbol {\n        <<enumeration>>\n        CIRCLE = 0\n        SQUARE = 4\n        TRIANGLE = 3\n        -corners int\n    }"}),(0,l.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und\nObject-Methoden dargestellt"),(0,l.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die\nObject-Methoden wie gewohnt implementiert werden")),(0,l.kt)("h2",{id:"hinweis-zur-klasse-cardcolordice"},"Hinweis zur Klasse CardColorDice"),(0,l.kt)("p",null,"Die Methode ",(0,l.kt)("inlineCode",{parentName:"p"},"void rollTheDice()")," soll mit einer gleichverteilten\nWahrscheinlichkeit der Kartenfarbe (",(0,l.kt)("inlineCode",{parentName:"p"},"cardColor"),") einen Wert zuweisen"),(0,l.kt)("h2",{id:"hinweis-zur-klasse-valuedice"},"Hinweis zur Klasse ValueDice"),(0,l.kt)("p",null,"Die Methode ",(0,l.kt)("inlineCode",{parentName:"p"},"void rollTheDice()")," soll mit einer gleichverteilten\nWahrscheinlichkeit dem Wert (",(0,l.kt)("inlineCode",{parentName:"p"},"value"),") eine Zahl zwischen 1 und 6 zuweisen"),(0,l.kt)("h2",{id:"hinweis-zur-klasse-shadesymboldice"},"Hinweis zur Klasse ShadeSymbolDice"),(0,l.kt)("p",null,"Die Methode ",(0,l.kt)("inlineCode",{parentName:"p"},"void rollTheDice()")," soll mit einer gleichverteilten\nWahrscheinlichkeit dem Formensymbol (",(0,l.kt)("inlineCode",{parentName:"p"},"shadeSymbol"),") einen Wert zuweisen"),(0,l.kt)("h2",{id:"hinweise-zur-klasse-player"},"Hinweise zur Klasse Player"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"void addPoints(points: int)")," soll die Punkte des Spielers\n(",(0,l.kt)("inlineCode",{parentName:"li"},"points"),") um die eingehenden Punkte erh\xf6hen"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"void deductPoints(points: int)")," soll die Punkte des Spielers\n(",(0,l.kt)("inlineCode",{parentName:"li"},"points"),") um die eingehenden Punkte reduzieren")),(0,l.kt)("h2",{id:"hinweise-zum-w\xfcrfelspiel-1"},"Hinweise zum W\xfcrfelspiel 1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Anzahl Spieler: 1"),(0,l.kt)("li",{parentName:"ul"},"W\xfcrfel: 5 Formenw\xfcrfel"),(0,l.kt)("li",{parentName:"ul"},"Ablauf:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Das Spiel soll aus mehreren Runden bestehen"),(0,l.kt)("li",{parentName:"ul"},"Zu Beginn soll der Spieler seinen Namen eingeben"),(0,l.kt)("li",{parentName:"ul"},"Zu Beginn einer jeden Runde sollen alle W\xfcrfel geworfen werden"),(0,l.kt)("li",{parentName:"ul"},"Nach jedem Wurf soll der Spieler eingeben, ob die Anzahl Ecken (",(0,l.kt)("inlineCode",{parentName:"li"},"corners"),")\naller W\xfcrfel h\xf6her als 12 ist oder nicht. Liegt der Spieler mit seiner\nEinsch\xe4tzung richtig, bekommt er einen Punkt"),(0,l.kt)("li",{parentName:"ul"},"Am Ende einer Runde soll der Spieler eingeben, ob er eine weitere Runde\nspielen m\xf6chte"),(0,l.kt)("li",{parentName:"ul"},"Am Ende des Spiels soll die Anzahl der gespielten Runden sowie die Punktzahl\nausgegeben werden")))),(0,l.kt)("h2",{id:"hinweise-zum-w\xfcrfelspiel-2"},"Hinweise zum W\xfcrfelspiel 2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Anzahl Spieler: 2"),(0,l.kt)("li",{parentName:"ul"},"W\xfcrfel: 1 Formenw\xfcrfel, 1 Zahlenw\xfcrfel"),(0,l.kt)("li",{parentName:"ul"},"Ablauf:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Beide Spieler sollen zu Beginn des Spiels ihre Namen eingeben"),(0,l.kt)("li",{parentName:"ul"},"Beide Spieler sollen das Spiel mit 100 Punkte beginnen"),(0,l.kt)("li",{parentName:"ul"},"Beide Spieler sollen abwechselnd solange zwei W\xfcrfel werfen, bis einer der\nbeiden Spieler keine Punkte mehr hat"),(0,l.kt)("li",{parentName:"ul"},"In jeder Runde verliert der Spieler mit dem schlechteren Wurfwert Punkte\n(die Differenz der beiden Wurfwerte)"))),(0,l.kt)("li",{parentName:"ul"},"Hinweis: Der Wurfwert berechnet sich nach der Formel ",(0,l.kt)("em",{parentName:"li"},"Zahlenwert des\nZahlenw\xfcrfels ","*"," Anzahl Ecken des gew\xfcrfelten Formensymbols"))))}u.isMDXComponent=!0}}]);