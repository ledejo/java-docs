"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[5142],{3905:(e,t,i)=>{i.d(t,{Zo:()=>c,kt:()=>v});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=d(i),u=r,v=m["".concat(s,".").concat(u)]||m[u]||p[u]||a;return i?n.createElement(v,o(o({ref:t},c),{},{components:i})):n.createElement(v,o({ref:t},c))}));function v(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=i[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}u.displayName="MDXCreateElement"},9107:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var n=i(7462),r=(i(7294),i(3905));const a={title:"Videosammlung",description:"",tags:["inheritance","polymorphy","exceptions","records","io-streams"]},o=void 0,l={unversionedId:"exam-exercises/exam-exercises-java2/video-collection",id:"exam-exercises/exam-exercises-java2/video-collection",title:"Videosammlung",description:"",source:"@site/docs/exam-exercises/exam-exercises-java2/video-collection.md",sourceDirName:"exam-exercises/exam-exercises-java2",slug:"/exam-exercises/exam-exercises-java2/video-collection",permalink:"/java-docs/exam-exercises/exam-exercises-java2/video-collection",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java2/video-collection.md",tags:[{label:"inheritance",permalink:"/java-docs/tags/inheritance"},{label:"polymorphy",permalink:"/java-docs/tags/polymorphy"},{label:"exceptions",permalink:"/java-docs/tags/exceptions"},{label:"records",permalink:"/java-docs/tags/records"},{label:"io-streams",permalink:"/java-docs/tags/io-streams"}],version:"current",frontMatter:{title:"Videosammlung",description:"",tags:["inheritance","polymorphy","exceptions","records","io-streams"]},sidebar:"examExercisesSidebar",previous:{title:"Raumstation",permalink:"/java-docs/exam-exercises/exam-exercises-java2/space-station"}},s={},d=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweise zur Klasse VideoCollection",id:"hinweise-zur-klasse-videocollection",level:2},{value:"Beispielhafter Aufbau der Videodatei",id:"beispielhafter-aufbau-der-videodatei",level:2}],c={toc:d},m="wrapper";function p(e){let{components:t,...i}=e;return(0,r.kt)(m,(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine ausf\xfchrbare Klasse und/oder eine Testklasse."),(0,r.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/212251022-87846032-031a-462f-abf7-8ac35d97352e.png",alt:"image"})),(0,r.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und Object-Methoden dargestellt"),(0,r.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die Object-Methoden wie gewohnt implementiert werden")),(0,r.kt)("h2",{id:"hinweise-zur-klasse-videocollection"},"Hinweise zur Klasse VideoCollection"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"void addVideo(video: Video)")," soll der Videoliste (",(0,r.kt)("inlineCode",{parentName:"li"},"videos"),") das eingehende Video hinzuf\xfcgen"),(0,r.kt)("li",{parentName:"ul"},"Die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"void importVideos(file: File)")," soll der Videoliste (",(0,r.kt)("inlineCode",{parentName:"li"},"videos"),") die Videos der eingehenden Datei hinzuf\xfcgen. Die Ausnahme ",(0,r.kt)("inlineCode",{parentName:"li"},"FileNotFoundException")," soll dabei weitergeleitet werden"),(0,r.kt)("li",{parentName:"ul"},"Die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"Video getVideoByTitle(title: String)")," soll das Video zum eingehenden Titel zur\xfcckgeben. F\xfcr den Fall, dass kein Video gefunden wird, soll der Wert ",(0,r.kt)("inlineCode",{parentName:"li"},"null"),"\nzur\xfcckgegeben werden")),(0,r.kt)("h2",{id:"beispielhafter-aufbau-der-videodatei"},"Beispielhafter Aufbau der Videodatei"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"The Matrix;SCIFI;1999;VHS;false\nEvil Dead;HORROR;1981;BLURAY;25\n")))}p.isMDXComponent=!0}}]);