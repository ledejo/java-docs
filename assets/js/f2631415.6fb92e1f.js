"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[3868],{9283:(e,n,t)=>{t.d(n,{Z:()=>a});var l=t(7294);function a(e){let{children:n,initSlides:t,width:a,height:r}=e;return(0,l.useEffect)((()=>{t()})),l.createElement("div",{className:"reveal",style:{width:a??"100vw",height:r??"100vh"}},l.createElement("div",{className:"slides"},n))}},9545:(e,n,t)=>{t.d(n,{O:()=>l});const l=()=>{const e=t(2199),n=t(7251),l=t(977),a=t(2489);new(t(9197))({plugins:[e,n,l,a]}).initialize({hash:!0})}},1983:(e,n,t)=>{t.d(n,{K:()=>a});var l=t(7294);const a=()=>l.createElement("p",{style:{fontSize:"8px",position:"absolute",bottom:0,right:0}},"*NKR")},7774:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});var l=t(7294),a=t(9283),r=t(1983),m=t(9545);function s(){return l.createElement(a.Z,{initSlides:m.O},l.createElement("section",null,l.createElement("section",null,"Fragen oder Probleme?")),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Wiederholung"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Java API"),l.createElement("li",{className:"fragment"},"final modifier"),l.createElement("li",{className:"fragment"},"Enumerations"),l.createElement("li",{className:"fragment"},"Klassendiagramme"),l.createElement("li",{className:"fragment"},"Aktivit\xe4tsdiagramme")))),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Vererbung")),l.createElement("section",null,l.createElement("h2",null,"Gemeinsamkeiten von Unterschiedlichen Klassen"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Auto & Truck"),l.createElement("li",{className:"fragment"},"Baby, Kind & Erwachsener"),l.createElement("li",{className:"fragment"},"Samsung Galaxy S1, S2,... S21"))),l.createElement("section",null,l.createElement("h2",null,"Vererbung erm\xf6glicht die Wiederverwendung von:"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Attributen"),l.createElement("li",{className:"fragment"},"Methoden"))),l.createElement("section",null,l.createElement("h2",null,"Generalisierung"),l.createElement("p",{className:"fragment"},"Generalisierung bedeutet alle gemeinsamen Attribute und Methoden mehrerer Klassen in eine weitere Klasse zu extrahieren."),l.createElement("p",{className:"fragment"},"z.B. von Cat/Dog in die Klasse Animal")),l.createElement("section",null,l.createElement("h2",null,"Vererbung"),l.createElement("p",{className:"fragment"},"Vererbung bedeutet alle Attribute und Methoden einer Klasse einer anderen Klasse zu \xfcbertragen."),l.createElement("p",{className:"fragment"},"z.B. Cat und Dog bekommen alle Attribute und Methoden der Klasse Animal")),l.createElement("section",null,l.createElement("h2",null,"Das Schl\xfcsselwort ",l.createElement("strong",null,"extends")),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:'public class Dog extends Animal {\n  public void bark() {\n   System.out.println("Wuff");\n  }\n}'}}))),l.createElement("section",null,l.createElement("h2",null,"Demo"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Generalisierung von Dog und Cat"),l.createElement("li",{className:"fragment"},"Vererbung an Dog und Cat"))),l.createElement("section",null,l.createElement("h2",null,"Das Schl\xfcsselwort ",l.createElement("strong",null,"super")),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"wird verwendet um den Konstruktor der vererbenden Klasse auszuf\xfchren"),l.createElement("li",{className:"fragment"},"muss als erste Methode im Konstruktor ausgef\xfchrt werden"))),l.createElement("section",null,l.createElement("pre",null,l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Animal {\n  public Animal(String name) {\n    this.name = name;\n  }\n}\n\npublic class Dog extends Animal {\n  public Dog(String name) {\n    super(name);\n  }\n}"}}))),l.createElement("section",null,l.createElement("h2",null,"Demo"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"super call mit Animal"))),l.createElement("section",null,l.createElement("h2",null,"der protected modifier"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"weiterer Access modifier wie public und private"),l.createElement("li",{className:"fragment"},"kann angewendet werden auf Attribute, Methoden und Konstruktoren"))),l.createElement("section",null,l.createElement("h2",null,"Auswirkung von protected"),l.createElement("p",null,"Methoden, Attribute und Konstructoren die mit protected markiert sind k\xf6nnen ausgef\xfchrt werden von:"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"erbenden Klassen"),l.createElement("li",{className:"fragment"},"Klassen im gleichen Package\ud83e\udd2f*")),l.createElement("div",{className:"fragment"},l.createElement(r.K,null))),l.createElement("section",null,l.createElement("h2",null,"Demo"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"protected name")))),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Zusammenfassung"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Gemeinsamkeiten mehrerer Klassen"),l.createElement("li",{className:"fragment"},"Generalisierung"),l.createElement("li",{className:"fragment"},"Vererbung"),l.createElement("li",{className:"fragment"},"protected"),l.createElement("li",{className:"fragment"},"super"))),l.createElement("section",null,l.createElement("h2",null,"Rest of the day"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Polymorphy 01 & 02")))))}}}]);