"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[8972],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=c(a),d=r,v=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return a?n.createElement(v,o(o({ref:t},l),{},{components:a})):n.createElement(v,o({ref:t},l))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},362:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const i={title:"Wrapper-Klassen",description:"",sidebar_position:10,tags:["java-api","wrappers"]},o=void 0,p={unversionedId:"documentation/java-api/wrappers",id:"documentation/java-api/wrappers",title:"Wrapper-Klassen",description:"",source:"@site/docs/documentation/java-api/wrappers.md",sourceDirName:"documentation/java-api",slug:"/documentation/java-api/wrappers",permalink:"/java-docs/documentation/java-api/wrappers",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/documentation/java-api/wrappers.md",tags:[{label:"java-api",permalink:"/java-docs/tags/java-api"},{label:"wrappers",permalink:"/java-docs/tags/wrappers"}],version:"current",sidebarPosition:10,frontMatter:{title:"Wrapper-Klassen",description:"",sidebar_position:10,tags:["java-api","wrappers"]},sidebar:"documentationSidebar",previous:{title:"Die Java API",permalink:"/java-docs/documentation/java-api/"},next:{title:"Datums- und Zeitangaben",permalink:"/java-docs/documentation/java-api/dates-and-times"}},s={},c=[],l={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Wrapper-Klassen verpacken primitive Datentypen in vollwertigen Klassen und erweitern so die primitiven Datentypen um hilfreiche Methoden. Das Verpacken eines primitiven Datentyps bezeichnet man als ",(0,r.kt)("strong",{parentName:"p"},"Boxing"),", das Entpacken als ",(0,r.kt)("strong",{parentName:"p"},"Unboxing"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MainClass.java" showLineNumbers',title:'"MainClass.java"',showLineNumbers:!0},"public class MainClass {\n\n  public static void main(String[] args) {\n    Integer i = Integer.valueOf(\"631\");\n    System.out.println(i);\n    Boolean b = Boolean.logicalXor(true, false);\n    System.out.println(b);\n    Character c = Character.toUpperCase('a');\n    System.out.println(c);\n  }\n\n}\n")))}u.isMDXComponent=!0}}]);