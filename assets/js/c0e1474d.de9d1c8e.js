"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[8511],{9283:(e,n,t)=>{t.d(n,{Z:()=>a});var l=t(7294);function a(e){let{children:n,initSlides:t,width:a,height:r}=e;return(0,l.useEffect)((()=>{t()})),l.createElement("div",{className:"reveal",style:{width:a??"100vw",height:r??"100vh"}},l.createElement("div",{className:"slides"},n))}},9545:(e,n,t)=>{t.d(n,{O:()=>l});const l=()=>{const e=t(2199),n=t(7251),l=t(977),a=t(2489);new(t(9197))({plugins:[e,n,l,a]}).initialize({hash:!0})}},2176:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});var l=t(7294),a=t(9283),r=t(9545);function s(){return l.createElement(a.Z,{initSlides:r.O},l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Agenda"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Generics"),l.createElement("li",{className:"fragment"},"Maps")))),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Generics")),l.createElement("section",null,l.createElement("h2",null,"Generische Typen"),l.createElement("p",{className:"fragment"},"In Java k\xf6nnen Klassen und Interfaces generisch sein."),l.createElement("p",{className:"fragment"},"Generisch hei\xdft, dass Funktionalit\xe4t unabh\xe4ngig von einem Typ implementiert werden k\xf6nnen.")),l.createElement("section",null,l.createElement("h2",null,"Beispiele Generische Klassen"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"ArrayList"),l.createElement("li",{className:"fragment"},"Optional")),l.createElement("p",{className:"fragment"},"Beide Klassen stellen immer die gleiche Funktionalit\xe4t bereit, egal welchen Typ wir verwenden.")),l.createElement("section",null,l.createElement("h2",null,"Beispiele ArrayList"),l.createElement("p",{className:"fragment"},"Egal ob wir Objekte vom Typ Human, Dog, String oder Integer in einer ArrayList abspeichern, wir haben immer die gleichen Methoden zur verf\xfcgung."),l.createElement("p",{className:"fragment"},"add, remove, size etc.")),l.createElement("section",null,l.createElement("h2",null,"Beispiel Optional"),l.createElement("p",{className:"fragment"},"Egal ob wir Objekte vom Typ Human, Dog, String oder Integer mit Optional.of, Optional.ofNullable oder Optional.empty erstellen, wir haben immer die gleichen Methoden zur verf\xfcgung."),l.createElement("p",{className:"fragment"},"isPresent, isEmpty, get")),l.createElement("section",null,l.createElement("h2",null,"Verwendung Generics I"),l.createElement("p",{className:"fragment"},"Will man in seiner Anwendung eine Liste von Menschen abspeichern ist der ",l.createElement("b",null,"spezifische")," Typ bekannt."),l.createElement("p",{className:"fragment"},"Nach dem Klassennamen wird innerhalb von spitzen Klammern, der"," ",l.createElement("b",null,"spezifische")," Typ angegeben.")),l.createElement("section",null,l.createElement("h2",null,"Verwendung Generics II"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;Human&gt; humans = new ArrayList&lt;&gt;();\n    Optional&ltHuman&gt; human = Optional.empty();\n  }\n}\n"}}))),l.createElement("section",null,l.createElement("h2",null,"Implementierung Generics I"),l.createElement("p",{className:"fragment"},"Um eine generische Klasse zu erstellen, wird nach dem Klassennamen in spitzen Klammern der Platzhalter f\xfcr einen Typ angegeben."),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;T&gt; {\n  // implementierung der Klasse\n}\n"}}))),l.createElement("section",null,l.createElement("h2",null,"Typplatzhalter I"),l.createElement("pre",null,l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;T&gt; {\n  // implementierung der Klasse\n}\n"}})),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;A&gt; {\n  // implementierung der Klasse\n}\n"}})),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;HANS&gt; {\n  // implementierung der Klasse\n}\n"}})),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;BLIBLABLUBB&gt; {\n  // implementierung der Klasse\n}\n"}})),l.createElement("p",{className:"fragment"},"Der Namen des Platzhalters kann frei gew\xe4hlt werden.")),l.createElement("section",null,l.createElement("h2",null,"Typplatzhalter II"),l.createElement("pre",null,l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;T&gt; {\n  // implementierung der Klasse\n}\n"}})),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;T,U&gt; {\n  // implementierung der Klasse\n}\n"}})),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;T, U, V&gt; {\n  // implementierung der Klasse\n}\n"}})),l.createElement("p",{className:"fragment"},"Es k\xf6nnen mehrere Platzhalter kommagetrennt angegeben werden.")),l.createElement("section",null,l.createElement("h2",null,"Verwenden von Typplatzhaltern I"),l.createElement("pre",null,l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;T&gt; {\n  private String teamName;\n  private ArrayList&lt;T&gt; teamMembers = new ArrayList&lt;&gt;();\n  \n  public String teamName() {\n    return this.teamName;\n  }\n  \n  public void addMember(T member) {\n    this.teamMembers.add(member);\n  }\n}\n"}}))),l.createElement("section",null,l.createElement("h2",null,"Verwenden von Typplatzhaltern II"),l.createElement("pre",null,l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:'public class Main {\n  public static void main(String[] args) {\n    Team&lt;FootballPlayer&gt; scfreiburg = new Team&lt;&gt;();\n    Team&lt;HockeyPlayer&gt; wildwings  = new Team&lt;&gt;();\n    \n    scfreiburg.addMember(new FootballPlayer("Steffen");\n    scfreiburg.addMember(new HockeyPlayer("Mirco"); // fails\n    wildwings.addMember(new HockeyPlayer("Mirco");\n }\n}\n'}}))),l.createElement("section",null,l.createElement("h2",null,"Demo"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Football- und Hockeyteam"),l.createElement("li",{className:"fragment"},"Generische Team Klasse"),l.createElement("li",{className:"fragment"},"Spieler eines Teams ausgeben"))),l.createElement("section",null,l.createElement("h2",null,"Einschr\xe4nken von Typplatzhaltern I"),l.createElement("p",null,"Um noch mehr Funktionalit\xe4ten in eine generische Klasse auszulagern ist es notwendig den Typ einzuschr\xe4nken.")),l.createElement("section",null,l.createElement("h2",null,"Einschr\xe4nken von Typplatzhaltern II"),l.createElement("p",null,"Mit ",l.createElement("b",null,"extends")," und ",l.createElement("b",null,"super")," k\xf6nnen die m\xf6glichen Typen eingeschr\xe4nkt werden.")),l.createElement("section",null,l.createElement("h2",null,"Einschr\xe4nken von Typplatzhaltern III"),l.createElement("pre",null,l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;T extends Player&gt; {\n  // Player und Subtypen von Player erlaubt\n}\n"}})),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;T super Player&gt; {\n  // Player und Supertypen von Player erlaubt \n}\n"}}))),l.createElement("section",null,l.createElement("h2",null,"Einschr\xe4nken von Typplatzhaltern IV"),l.createElement("pre",null,l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Player {}\npublic class BaseballPlayer extends Player {}\npublic class FootballPlayer extends Player {}\npublic class ExtremeFootballPlayer extends FootballPlayer {}\n"}})),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:"public class Team&lt;T extends Player&gt; {} //PBFE erlaubt\npublic class Team&lt;T extends FootballPlayer&gt; {} //FE erlaubt\npublic class Team&lt;T super Player&gt; {} // P erlaubt\npublic class Team&lt;T super FootballPlayer&gt; {} //PF erlaubt"}}))),l.createElement("section",null,l.createElement("h2",null,"Demo"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Spieler eines Generischen Teams ausgeben")))),l.createElement("section",null,l.createElement("section",null,l.createElement("h2",null,"Maps")),l.createElement("section",null,l.createElement("h2",null,"Maps"),l.createElement("p",null,"Wir kennen das Array oder die ArrayList als Datenstruktur. Hierbei greifen wir \xfcber den Index auf Elemente zu."),l.createElement("p",{className:"fragment"},"Mithilfe einer HashMap lassen sich Daten in Form von Schl\xfcssel-Wert-Paaren effizient speichern und abrufen.")),l.createElement("section",null,l.createElement("h4",null,"Beispiel Schl\xfcssel-Wert-Paare"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Studentendaten -> MatrikelNummer, Student"),l.createElement("li",{className:"fragment"},"Produktinventar -> Produkt, Anzahl"),l.createElement("li",{className:"fragment"},"StadtInfos -> Stadtname, CityInfo"),l.createElement("li",{className:"fragment"},"Hauptst\xe4dte -> Land, Hauptstadt"))),l.createElement("section",null,l.createElement("h2",null,"Erzeugen einer HashMap"),l.createElement("pre",{className:"fragment"},l.createElement("code",{className:"java",dangerouslySetInnerHTML:{__html:'public class Main {\n  public static void main(String[] args) {\n    Student steffen = new Student("Steffen");\n    HashMap&lt;Integer, Student&gt; students = new HashMap&lt;&gt;();\n    students.put(4545, steffen); // add value to map\n    students.get(4545); // get value from map\n    students.remove(4545); // remove value from map\n    students.clear(); // clear map\n    students.size(); // number of items in map\n    students.containsKey(4545); // check if key exists\n    students.containsValue(steffen); // check if value exists\n    students.keySet(); // get all keys as Set\n    students.entrySet(); // get all entries as Set-Entry\n    students.values(); // get all entries as Collection\n  }\n}\n'}}))),l.createElement("section",null,l.createElement("h2",null,"Demo"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Studentendaten"),l.createElement("li",{className:"fragment"},"Daten liegen unsortiert vor"),l.createElement("li",{className:"fragment"},"Objekte als Schl\xfcssel"))),l.createElement("section",null,l.createElement("h2",null,"Maps"),l.createElement("p",null,"Daten liegen unsortiert vor."),l.createElement("p",{className:"fragment"},"Maps mit Objekten als Schl\xfcssel m\xfcssen je nach Anwendungsfall richtig implementiert werden."),l.createElement("p",{className:"fragment"},"equals - Methode muss zus\xe4tzlich zu hashCode implementiert werden"),l.createElement("p",{className:"fragment"},"performance outlook")),l.createElement("section",null,l.createElement("h2",null,"Frag jetzt!"))),l.createElement("section",null,l.createElement("h2",null,"Rest of the Day"),l.createElement("ul",null,l.createElement("li",{className:"fragment"},"Generics"),l.createElement("li",{className:"fragment"},"Maps"))))}}}]);