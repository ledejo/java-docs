"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[4985],{3905:(e,r,a)=>{a.d(r,{Zo:()=>u,kt:()=>g});var n=a(7294);function t(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function i(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?i(Object(a),!0).forEach((function(r){t(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function s(e,r){if(null==e)return{};var a,n,t=function(e,r){if(null==e)return{};var a,n,t={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],r.indexOf(a)>=0||(t[a]=e[a]);return t}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var d=n.createContext({}),o=function(e){var r=n.useContext(d),a=r;return e&&(a="function"==typeof e?e(r):l(l({},r),e)),a},u=function(e){var r=o(e.components);return n.createElement(d.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var a=e.components,t=e.mdxType,i=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=o(a),p=t,g=c["".concat(d,".").concat(p)]||c[p]||m[p]||i;return a?n.createElement(g,l(l({ref:r},u),{},{components:a})):n.createElement(g,l({ref:r},u))}));function g(e,r){var a=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var i=a.length,l=new Array(i);l[0]=p;var s={};for(var d in r)hasOwnProperty.call(r,d)&&(s[d]=r[d]);s.originalType=e,s[c]="string"==typeof e?e:t,l[1]=s;for(var o=2;o<i;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},9116:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var n=a(7462),t=(a(7294),a(3905));const i={title:"Kartenausteiler",description:"",tags:["oo","enumerations","io-streams"]},l=void 0,s={unversionedId:"additional-material/exam-exercises1/cards-dealer",id:"additional-material/exam-exercises1/cards-dealer",title:"Kartenausteiler",description:"",source:"@site/docs/additional-material/exam-exercises1/cards-dealer.md",sourceDirName:"additional-material/exam-exercises1",slug:"/additional-material/exam-exercises1/cards-dealer",permalink:"/java-docs/additional-material/exam-exercises1/cards-dealer",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/additional-material/exam-exercises1/cards-dealer.md",tags:[{label:"oo",permalink:"/java-docs/tags/oo"},{label:"enumerations",permalink:"/java-docs/tags/enumerations"},{label:"io-streams",permalink:"/java-docs/tags/io-streams"}],version:"current",frontMatter:{title:"Kartenausteiler",description:"",tags:["oo","enumerations","io-streams"]},sidebar:"additionalMaterialSidebar",previous:{title:"Klausuraufgaben Programmierung 1",permalink:"/java-docs/additional-material/exam-exercises1/"},next:{title:"Kassensystem",permalink:"/java-docs/additional-material/exam-exercises1/cashier-system"}},d={},o=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweise zur Klasse Player",id:"hinweise-zur-klasse-player",level:2},{value:"Hinweis zur Klasse CardsDealer",id:"hinweis-zur-klasse-cardsdealer",level:2},{value:"Hinweis zur Klasse CardsReader",id:"hinweis-zur-klasse-cardsreader",level:2},{value:"Beispielhafter Aufbau der Kartendatei",id:"beispielhafter-aufbau-der-kartendatei",level:2}],u={toc:o},c="wrapper";function m(e){let{components:r,...a}=e;return(0,t.kt)(c,(0,n.Z)({},u,a,{components:r,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine ausf\xfchrbare Klasse."),(0,t.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,t.kt)("mermaid",{value:"classDiagram\n    CardDealer o-- Player\n    CardDealer o-- Card\n    Player o-- Card\n\n    class Player {\n        -cards ArrayList~Card~\n        +Player(cards ArrayList~Card~)\n        +addCard(card Card) void\n        +getCardWithHighestValue() Card\n        +getCardsByColour(colour String) ArrayList~Card~\n    }\n\n    class CardDealer {\n        -deck ArrayList~Card~\n        -player1 Player\n        -player2 Player\n        +CardsDealer(deck ArrayList~Card~, player1 Player, player2 Player )\n        +dealCards(amount int) void\n    }\n\n    class Card {\n        -colour String\n        -value int\n        +Card(colour String, value int)\n    }\n\n    class CardsReader {\n        +getCards(file File) ArrayList~Card~\n    }"}),(0,t.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und Object-Methoden dargestellt"),(0,t.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die Object-Methoden wie gewohnt implementiert werden")),(0,t.kt)("h2",{id:"hinweise-zur-klasse-player"},"Hinweise zur Klasse Player"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"void addCard(card: Card)")," soll dem Spieler die eingehende Karte hinzuf\xfcgen"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"ArrayList<Card> getCardsByColour(colour: String)")," soll alle Karten des Spielers zur eingehenden Farbe zur\xfcckgeben"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"Card getCardWithHighestValue()")," soll die Karte des Spielers mit dem h\xf6chsten Wert zur\xfcckgeben")),(0,t.kt)("h2",{id:"hinweis-zur-klasse-cardsdealer"},"Hinweis zur Klasse CardsDealer"),(0,t.kt)("p",null,"Die Methode ",(0,t.kt)("inlineCode",{parentName:"p"},"void dealCards(amount: int)")," soll den beiden Spielern die eingehende Anzahl an zuf\xe4lligen Karten des Decks austeilen"),(0,t.kt)("h2",{id:"hinweis-zur-klasse-cardsreader"},"Hinweis zur Klasse CardsReader"),(0,t.kt)("p",null,"Die Methode ",(0,t.kt)("inlineCode",{parentName:"p"},"ArrayList<Card> getCards(file: File)")," soll alle Karten der eingehenden Datei zur\xfcckgeben."),(0,t.kt)("h2",{id:"beispielhafter-aufbau-der-kartendatei"},"Beispielhafter Aufbau der Kartendatei"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Karo;1\nKaro;2\nKaro;3\nKaro;4\nKaro;5\nHerz;1\nHerz;2\nHerz;3\nHerz;4\nHerz;5\nPik;1\nPik;2\nPik;3\nPik;4\nPik;5\nKreuz;1\nKreuz;2\nKreuz;3\nKreuz;4\nKreuz;5\n")))}m.isMDXComponent=!0}}]);