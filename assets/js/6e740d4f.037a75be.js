"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[436],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,v=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(v,o(o({ref:t},p),{},{components:n})):a.createElement(v,o({ref:t},p))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1965:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={title:"Datums- und Zeitangaben",description:"",sidebar_position:20,tags:["java-api","dates-and-times"]},o=void 0,s={unversionedId:"documentation/java-api/dates-and-times",id:"documentation/java-api/dates-and-times",title:"Datums- und Zeitangaben",description:"",source:"@site/docs/documentation/java-api/dates-and-times.md",sourceDirName:"documentation/java-api",slug:"/documentation/java-api/dates-and-times",permalink:"/java-docs/documentation/java-api/dates-and-times",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/documentation/java-api/dates-and-times.md",tags:[{label:"java-api",permalink:"/java-docs/tags/java-api"},{label:"dates-and-times",permalink:"/java-docs/tags/dates-and-times"}],version:"current",sidebarPosition:20,frontMatter:{title:"Datums- und Zeitangaben",description:"",sidebar_position:20,tags:["java-api","dates-and-times"]},sidebar:"documentationSidebar",previous:{title:"Wrapper-Klassen",permalink:"/java-docs/documentation/java-api/wrappers"},next:{title:"Dateien und Verzeichnisse",permalink:"/java-docs/documentation/java-api/files"}},l={},c=[],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Die Klasse ",(0,i.kt)("inlineCode",{parentName:"p"},"LocalDateTime")," liefert alle relevanten Informationen zum fast\nweltweit verwendeten Kalendersystem ISO-8601 (gregorianischer Kalender)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MainClass.java" showLineNumbers',title:'"MainClass.java"',showLineNumbers:!0},'public class MainClass {\n\n  public static void main(String[] args) {\n    LocalDateTime now = LocalDateTime.now();\n\n    System.out.println("Jahr: " + now.getYear());\n    System.out.println("Monat: " + now.getMonth());\n    System.out.println("Tag: " + now.getDayOfMonth());\n  }\n\n}\n')),(0,i.kt)("p",null,"Neben den print-Methoden des Standard-Ausgabestroms ",(0,i.kt)("inlineCode",{parentName:"p"},"System.out")," besitzt die\nKlasse ",(0,i.kt)("inlineCode",{parentName:"p"},"System")," auch die Methode ",(0,i.kt)("inlineCode",{parentName:"p"},"long currentTimeMillis()"),", die die Differenz\nin Millisekunden zwischen der aktuellen Systemzeit und dem Nullpunkt zur\xfcckgibt."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MainClass.java" showLineNumbers',title:'"MainClass.java"',showLineNumbers:!0},"public class MainClass {\n\n  public static void main(String[] args) {\n    long timeInMilliseconds = System.currentTimeMillis();\n    System.out.println(timeInMilliseconds);\n  }\n\n}\n")),(0,i.kt)("admonition",{title:"Hinweis",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Der festgelegte Nullpunkt ist der 1. Januar 1970, 0 Uhr.")))}u.isMDXComponent=!0}}]);