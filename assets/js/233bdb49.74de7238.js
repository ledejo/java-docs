"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[7200],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),p=a,k=m["".concat(s,".").concat(p)]||m[p]||d[p]||i;return n?r.createElement(k,o(o({ref:t},u),{},{components:n})):r.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8532:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={title:"Bibliothek",description:"",tags:["inheritance","polymorphy","exceptions","records","maps","optionals"]},o=void 0,l={unversionedId:"exam-exercises/exam-exercises-java2/library",id:"exam-exercises/exam-exercises-java2/library",title:"Bibliothek",description:"",source:"@site/docs/exam-exercises/exam-exercises-java2/library.md",sourceDirName:"exam-exercises/exam-exercises-java2",slug:"/exam-exercises/exam-exercises-java2/library",permalink:"/java-docs/exam-exercises/exam-exercises-java2/library",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java2/library.md",tags:[{label:"inheritance",permalink:"/java-docs/tags/inheritance"},{label:"polymorphy",permalink:"/java-docs/tags/polymorphy"},{label:"exceptions",permalink:"/java-docs/tags/exceptions"},{label:"records",permalink:"/java-docs/tags/records"},{label:"maps",permalink:"/java-docs/tags/maps"},{label:"optionals",permalink:"/java-docs/tags/optionals"}],version:"current",frontMatter:{title:"Bibliothek",description:"",tags:["inheritance","polymorphy","exceptions","records","maps","optionals"]},sidebar:"examExercisesSidebar",previous:{title:"Lego-Baustein",permalink:"/java-docs/exam-exercises/exam-exercises-java2/lego-brick"},next:{title:"Messdaten",permalink:"/java-docs/exam-exercises/exam-exercises-java2/measurement-data"}},s={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweis zur Klasse EBook",id:"hinweis-zur-klasse-ebook",level:2},{value:"Hinweise zur Klasse Library",id:"hinweise-zur-klasse-library",level:2}],u={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine ausf\xfchrbare Klasse und/oder eine Testklasse."),(0,a.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,a.kt)("mermaid",{value:"classDiagram\n    Library o-- Book\n    Library o-- Status\n    Book <|-- EBook\n    Book <|-- PaperBook\n    Book o-- Author\n    EBook o-- FileFormat\n\n    class Library {\n        <<record>>\n        -name String\n        -books Map~Book&#44&#160Status~\n        +addBook(book Book) void\n        +getBookByTitle(title String) Optional~Book~\n        +getPaperBooksByStatus(status Status) List~PaperBook~\n    }\n\n    class Status {\n        <<enumeration>>\n        AVAILABLE = verf\xfcgbar\n        LENT = verliehen\n        -description String\n    }\n\n    class Book {\n        <<abstract>>\n        -id UUID\n        -author Author\n        -title String\n        +Book(author Author, title String)\n    }\n\n    class EBook {\n        -fileFormat FileFormat\n        -fileSizeInKB int\n        +EBook(author Author, title String, fileFormat FileFormat, fileSizeInKB int)\n    }\n\n    class PaperBook {\n        -pages int\n        +PaperBook(author Author, title String, pages int)\n    }\n\n    class Author {\n        <<record>>\n        -name String\n        -nationality String\n    }\n\n    class FileFormat {\n        <<enumeration>>\n        AZW = Amazon Kindle\n        EPUB = Electronic Publication\n        LRF = Portable Reader File\n        -description String\n    }"}),(0,a.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und Object-Methoden dargestellt"),(0,a.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die Object-Methoden wie gewohnt implementiert werden"),(0,a.kt)("li",{parentName:"ul"},"Die statische Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"UUID randomUUID()")," der Klasse ",(0,a.kt)("inlineCode",{parentName:"li"},"UUID")," gibt eine zuf\xe4llig erstellte UUID zur\xfcck")),(0,a.kt)("h2",{id:"hinweis-zur-klasse-ebook"},"Hinweis zur Klasse EBook"),(0,a.kt)("p",null,"Der Konstruktor soll alle Attribute initialisieren. F\xfcr den Fall, dass die eingehende Dateigr\xf6\xdfe kleiner gleich Null ist, soll die Ausnahme ",(0,a.kt)("inlineCode",{parentName:"p"},"WrongFileSizeException")," ausgel\xf6st werden."),(0,a.kt)("h2",{id:"hinweise-zur-klasse-library"},"Hinweise zur Klasse Library"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"void addBook(book: Book)")," soll der B\xfccherliste (",(0,a.kt)("inlineCode",{parentName:"li"},"books"),") das eingehende Buch mit dem Status ",(0,a.kt)("inlineCode",{parentName:"li"},"verf\xfcgbar")," hinzuf\xfcgen"),(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"Optional<Book> getBookByTitle(title: String)")," soll das Buch zum eingehenden Titel als Optional zur\xfcckgeben"),(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"List<PaperBook> getPaperBooksByStatus(status: Status)")," soll alle gedruckten B\xfccher zum eingehenden Status zur\xfcckgeben")))}d.isMDXComponent=!0}}]);