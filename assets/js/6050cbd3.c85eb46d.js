"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[6668],{3905:(e,n,i)=>{i.d(n,{Zo:()=>c,kt:()=>h});var l=i(7294);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function a(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,l)}return i}function t(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?a(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function s(e,n){if(null==e)return{};var i,l,r=function(e,n){if(null==e)return{};var i,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)i=a[l],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)i=a[l],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var o=l.createContext({}),d=function(e){var n=l.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):t(t({},n),e)),i},c=function(e){var n=d(e.components);return l.createElement(o.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},p=l.forwardRef((function(e,n){var i=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=d(i),p=r,h=m["".concat(o,".").concat(p)]||m[p]||u[p]||a;return i?l.createElement(h,t(t({ref:n},c),{},{components:i})):l.createElement(h,t({ref:n},c))}));function h(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=i.length,t=new Array(a);t[0]=p;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[m]="string"==typeof e?e:r,t[1]=s;for(var d=2;d<a;d++)t[d]=i[d];return l.createElement.apply(null,t)}return l.createElement.apply(null,i)}p.displayName="MDXCreateElement"},631:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var l=i(7462),r=(i(7294),i(3905));const a={title:"W\xfcrfelspiele",description:"",tags:["console-applications","oo","enumerations","inheritance","polymorphy"]},t=void 0,s={unversionedId:"additional-material/exam-exercises1/dice-games",id:"additional-material/exam-exercises1/dice-games",title:"W\xfcrfelspiele",description:"",source:"@site/docs/additional-material/exam-exercises1/dice-games.md",sourceDirName:"additional-material/exam-exercises1",slug:"/additional-material/exam-exercises1/dice-games",permalink:"/java-docs/additional-material/exam-exercises1/dice-games",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/additional-material/exam-exercises1/dice-games.md",tags:[{label:"console-applications",permalink:"/java-docs/tags/console-applications"},{label:"oo",permalink:"/java-docs/tags/oo"},{label:"enumerations",permalink:"/java-docs/tags/enumerations"},{label:"inheritance",permalink:"/java-docs/tags/inheritance"},{label:"polymorphy",permalink:"/java-docs/tags/polymorphy"}],version:"current",frontMatter:{title:"W\xfcrfelspiele",description:"",tags:["console-applications","oo","enumerations","inheritance","polymorphy"]},sidebar:"additionalMaterialSidebar",previous:{title:"Kreatur",permalink:"/java-docs/additional-material/exam-exercises1/creature"},next:{title:"Fast Food",permalink:"/java-docs/additional-material/exam-exercises1/fast-food"}},o={},d=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweis zur Klasse CardColorDice",id:"hinweis-zur-klasse-cardcolordice",level:2},{value:"Hinweis zur Klasse ValueDice",id:"hinweis-zur-klasse-valuedice",level:2},{value:"Hinweis zur Klasse ShadeSymbolDice",id:"hinweis-zur-klasse-shadesymboldice",level:2},{value:"Hinweise zur Klasse Player",id:"hinweise-zur-klasse-player",level:2},{value:"Hinweise zum W\xfcrfelspiel 1",id:"hinweise-zum-w\xfcrfelspiel-1",level:2},{value:"Hinweise zum W\xfcrfelspiel 2",id:"hinweise-zum-w\xfcrfelspiel-2",level:2}],c={toc:d},m="wrapper";function u(e){let{components:n,...i}=e;return(0,r.kt)(m,(0,l.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle f\xfcr jedes W\xfcrfelspiel eine ausf\xfchrbare Klasse."),(0,r.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,r.kt)("mermaid",{value:"classDiagram\n    Dice <|-- CardColorDice\n    Dice <|-- ValueDice\n    Dice <|-- ShapeSymbolDice\n    CardColorDice o-- CardColor\n    ShapeSymbolDice o-- ShapeSymbol\n\n    class Player {\n        -name String\n        -points int\n        +Player(name String, points int)\n        +addPoints(points int) void\n        +deductPoints(points int) void\n    }\n\n    class Dice {\n        +rollTheDice() void\n    }\n\n    class CardColorDice {\n        -cardColor CardColor\n        +rollTheDice() void\n    }\n\n    class ValueDice {\n        -value int\n        +rollTheDice() void\n    }\n\n    class ShapeSymbolDice {\n        -shapeSymbol ShapeSymbol\n        +rollTheDice() void\n    }\n\n    class CardColor {\n        <<enumeration>>\n        CLUBS = Kreuz, 1\n        SPADE = Pik, 2\n        HEARTS = Herz, 3\n        DIAMONDS = Karo, 4\n        -description String\n        -priority int\n    }\n\n    class ShapeSymbol {\n        <<enumeration>>\n        CIRCLE = 0\n        SQUARE = 4\n        TRIANGLE = 3\n        -corners int\n    }"}),(0,r.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und Object-Methoden dargestellt"),(0,r.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die Object-Methoden wie gewohnt implementiert werden")),(0,r.kt)("h2",{id:"hinweis-zur-klasse-cardcolordice"},"Hinweis zur Klasse CardColorDice"),(0,r.kt)("p",null,"Die Methode ",(0,r.kt)("inlineCode",{parentName:"p"},"void rollTheDice()")," soll mit einer gleichverteilten Wahrscheinlichkeit der Kartenfarbe (",(0,r.kt)("inlineCode",{parentName:"p"},"cardColor"),") einen Wert zuweisen"),(0,r.kt)("h2",{id:"hinweis-zur-klasse-valuedice"},"Hinweis zur Klasse ValueDice"),(0,r.kt)("p",null,"Die Methode ",(0,r.kt)("inlineCode",{parentName:"p"},"void rollTheDice()")," soll mit einer gleichverteilten Wahrscheinlichkeit dem Wert (",(0,r.kt)("inlineCode",{parentName:"p"},"value"),") eine Zahl zwischen 1 und 6 zuweisen"),(0,r.kt)("h2",{id:"hinweis-zur-klasse-shadesymboldice"},"Hinweis zur Klasse ShadeSymbolDice"),(0,r.kt)("p",null,"Die Methode ",(0,r.kt)("inlineCode",{parentName:"p"},"void rollTheDice()")," soll mit einer gleichverteilten Wahrscheinlichkeit dem Formensymbol (",(0,r.kt)("inlineCode",{parentName:"p"},"shadeSymbol"),") einen Wert zuweisen"),(0,r.kt)("h2",{id:"hinweise-zur-klasse-player"},"Hinweise zur Klasse Player"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"void addPoints(points: int)")," soll die Punkte des Spielers (",(0,r.kt)("inlineCode",{parentName:"li"},"points"),") um die eingehenden Punkte erh\xf6hen"),(0,r.kt)("li",{parentName:"ul"},"Die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"void deductPoints(points: int)")," soll die Punkte des Spielers (",(0,r.kt)("inlineCode",{parentName:"li"},"points"),") um die eingehenden Punkte reduzieren")),(0,r.kt)("h2",{id:"hinweise-zum-w\xfcrfelspiel-1"},"Hinweise zum W\xfcrfelspiel 1"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Anzahl Spieler: 1"),(0,r.kt)("li",{parentName:"ul"},"W\xfcrfel: 5 Formenw\xfcrfel"),(0,r.kt)("li",{parentName:"ul"},"Ablauf:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Das Spiel soll aus mehreren Runden bestehen"),(0,r.kt)("li",{parentName:"ul"},"Zu Beginn soll der Spieler seinen Namen eingeben"),(0,r.kt)("li",{parentName:"ul"},"Zu Beginn einer jeden Runde sollen alle W\xfcrfel geworfen werden"),(0,r.kt)("li",{parentName:"ul"},"Nach jedem Wurf soll der Spieler eingeben, ob die Anzahl Ecken (",(0,r.kt)("inlineCode",{parentName:"li"},"corners"),") aller W\xfcrfel h\xf6her als 12 ist oder nicht. Liegt der Spieler mit seiner Einsch\xe4tzung richtig, bekommt er einen Punkt"),(0,r.kt)("li",{parentName:"ul"},"Am Ende einer Runde soll der Spieler eingeben, ob er eine weitere Runde spielen m\xf6chte"),(0,r.kt)("li",{parentName:"ul"},"Am Ende des Spiels soll die Anzahl der gespielten Runden sowie die Punktzahl ausgegeben werden")))),(0,r.kt)("h2",{id:"hinweise-zum-w\xfcrfelspiel-2"},"Hinweise zum W\xfcrfelspiel 2"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Anzahl Spieler: 2"),(0,r.kt)("li",{parentName:"ul"},"W\xfcrfel: 1 Formenw\xfcrfel, 1 Zahlenw\xfcrfel"),(0,r.kt)("li",{parentName:"ul"},"Ablauf:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Beide Spieler sollen zu Beginn des Spiels ihre Namen eingeben"),(0,r.kt)("li",{parentName:"ul"},"Beide Spieler sollen das Spiel mit 100 Punkte beginnen"),(0,r.kt)("li",{parentName:"ul"},"Beide Spieler sollen abwechselnd solange zwei W\xfcrfel werfen, bis einer der beiden Spieler keine Punkte mehr hat"),(0,r.kt)("li",{parentName:"ul"},"In jeder Runde verliert der Spieler mit dem schlechteren Wurfwert Punkte (die Differenz der beiden Wurfwerte)"))),(0,r.kt)("li",{parentName:"ul"},"Hinweis: Der Wurfwert berechnet sich nach der Formel ",(0,r.kt)("em",{parentName:"li"},"Zahlenwert des Zahlenw\xfcrfels ","*"," Anzahl Ecken des gew\xfcrfelten Formensymbols"))))}u.isMDXComponent=!0}}]);