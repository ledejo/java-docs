"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[5248],{5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),l=n(4334);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>C});var a=n(7462),l=n(7294),r=n(4334),i=n(2466),s=n(6775),o=n(1980),u=n(7392),c=n(12);function d(e){return function(e){var t;return(null==(t=l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function m(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(r),(0,l.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=m(e),[i,s]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[o,u]=h({queryString:n,groupId:a}),[d,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,c.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),v=(()=>{const e=o??d;return p({value:e,tabValues:r})?e:null})();(0,l.useLayoutEffect)((()=>{v&&s(v)}),[v]);return{selectedValue:i,selectValue:(0,l.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),b(e)}),[u,b,r]),tabValues:r}}var v=n(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:n,selectedValue:s,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),m=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==s&&(d(t),o(a))},p=e=>{var t;let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}null==(t=n)||t.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:p,onClick:m},i,{className:(0,r.Z)("tabs__item",g.tabItem,null==i?void 0:i.className,{"tabs__item--active":s===t})}),n??t)})))}function f(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=b(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",g.tabList)},l.createElement(k,(0,a.Z)({},e,t)),l.createElement(f,(0,a.Z)({},e,t)))}function C(e){const t=(0,v.Z)();return l.createElement(N,(0,a.Z)({key:String(t)},e))}},7833:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),l=n(4866),r=n(5162),i=n(9960),s=n(614);function o(e){let{pullRequest:t,branchSuffix:n}=e;return a.createElement(l.Z,null,a.createElement(r.Z,{value:"exercise",label:"Exercise",default:!0},a.createElement(s.Z,{language:"console"},`git switch exercises/${n}`),a.createElement(i.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/exercises/${n}/Exercise.java`},a.createElement("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"}))),a.createElement(r.Z,{value:"solution",label:"Solution"},a.createElement(s.Z,{language:"console"},`git switch solutions/${n}`),a.createElement(i.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/solutions/${n}/Exercise.java`},a.createElement("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"}))),a.createElement(r.Z,{value:"pullrequest",label:"Pull Request"},"Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du im Pull Request "," ",a.createElement(i.Z,{to:`https://github.com/jappuccini/java-exercises/pull/${t}/files?diff=split`},"PR#",t)))}},6526:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(7462),l=(n(7294),n(3905)),r=n(7833);const i={title:"JavaStreamAPI01",description:""},s=void 0,o={unversionedId:"exercises/java-stream-api/java-stream-api01",id:"exercises/java-stream-api/java-stream-api01",title:"JavaStreamAPI01",description:"",source:"@site/docs/exercises/java-stream-api/java-stream-api01.md",sourceDirName:"exercises/java-stream-api",slug:"/exercises/java-stream-api/java-stream-api01",permalink:"/java-docs/exercises/java-stream-api/java-stream-api01",draft:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exercises/java-stream-api/java-stream-api01.md",tags:[],version:"current",frontMatter:{title:"JavaStreamAPI01",description:""},sidebar:"exercisesSidebar",previous:{title:"Die Java Stream API",permalink:"/java-docs/exercises/java-stream-api/"},next:{title:"JavaStreamAPI02",permalink:"/java-docs/exercises/java-stream-api/java-stream-api02"}},u={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweis zur Klasse Console",id:"hinweis-zur-klasse-console",level:2},{value:"Hinweise zur Klasse Queries",id:"hinweise-zur-klasse-queries",level:2}],d={toc:c},m="wrapper";function p(e){let{components:t,...n}=e;return(0,l.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Erstelle die Klasse ",(0,l.kt)("inlineCode",{parentName:"li"},"Queries")," anhand des abgebildeten Klassendiagramms"),(0,l.kt)("li",{parentName:"ul"},"Erstelle eine ausf\xfchrbare Klasse, welche alle erstellten Abfragen ausf\xfchrt und die Ergebnisse auf der Konsole ausgibt")),(0,l.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,l.kt)("mermaid",{value:"classDiagram\n    Console o-- Maker\n    Queries o-- Console\n\n    class Maker {\n        <<enumeration>>\n        MICROSOFT\n        NINTENDO\n        SONY\n    }\n\n    class Console {\n        <<record>>\n        -title String\n        -maker Maker\n        -lifespan int\n        -soldUnitsInMillions double\n    }\n\n    class DataProvider {\n        +getConsoles() List~Console~\n    }\n\n    class Queries {\n        -consoles List~Console~\n        +Queries(consoles List~Console~)\n        +getAllCurrentConsoleNames() List~String~\n        +getAllConsolesSortedByLifespan() List~Console~\n        +isAnyConsoleWithMoreThan150MillionSoldUnits() boolean\n        +isAllConsolesWithMoreThan50MillionSoldUnits() boolean\n        +getNumberOfConsolesFromNintendo() long\n        +getSoldUnitsInMillionsPerYearFromAllOutdatedConsoles() List~String~\n        +getAverageSoldUnitsInMillionsPerYearFromAllOutdatedConsoles() OptionalDouble\n        +getAllConsolesByMaker() Map~Maker&#44&#160List~Console~~\n        +getTotalSoldUnitsInMillionsPerMaker() Map~Maker&#44&#160Double~\n    }"}),(0,l.kt)("h2",{id:"hinweis-zur-klasse-console"},"Hinweis zur Klasse Console"),(0,l.kt)("p",null,"Konsolen, die aktuell noch verkauft werden, besitzen bei der Lebensspanne den Wert ",(0,l.kt)("inlineCode",{parentName:"p"},"-1")," (Stand: 14.06.2023)"),(0,l.kt)("h2",{id:"hinweise-zur-klasse-queries"},"Hinweise zur Klasse Queries"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"List<String> getAllCurrentConsoleNames()")," soll die Namen aller Konsolen, die aktuell noch verkauft werden zur\xfcckgeben (",(0,l.kt)("em",{parentName:"li"},"Nintendo Switch, PlayStation 4, XBox One"),")"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"List<VideoGameConsole> getAllConsolesSortedByLifespan()")," soll alle Konsolen absteigend sortiert nach der Lebensspanne zur\xfcckgeben (",(0,l.kt)("em",{parentName:"li"},"VideoGameConsole","[","title=Nintendo Wii, maker=NINTENDO, lifespan=13, soldUnits=101.63]"),",...)"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean isAnyConsoleWithMoreThan150MillionSoldUnits()")," soll die Antwort auf die Frage, ob es eine Konsole mit mehr als 150 Millionen verkauften Einheiten gibt, zur\xfcckgeben (",(0,l.kt)("em",{parentName:"li"},"true"),")"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean isAllConsolesWithMoreThan50MillionSoldUnits()")," soll die Antwort auf die Frage, ob von allen Konsolen mehr als 50 Millionen Einheiten verkauft wurden, zur\xfcckgeben (",(0,l.kt)("em",{parentName:"li"},"false"),")"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"long getNumberOfConsolesFromNintendo()")," soll die Anzahl der Konsolen von Nintendo zur\xfcckgeben (",(0,l.kt)("em",{parentName:"li"},"8"),")"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"List<String> getSoldUnitsInMillionsPerYearFromAllOutdatedConsoles()")," soll die Namen aller Konsolen, die nicht mehr verkauft werden sowie die Anzahl verkaufter Einheiten pro Jahr in Millionen zur\xfcckgeben (",(0,l.kt)("em",{parentName:"li"},"PlayStation 2 (13.225)"),",...)"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"OptionalDouble getAverageSoldUnitsInMillionsPerYearFromAllOutdatedConsoles()")," soll den Durchschnitt verkaufter Einheiten pro Jahr in Millionen aller Konsolen, die nicht mehr verkauft werden zur\xfcckgeben (",(0,l.kt)("em",{parentName:"li"},"9.900365412365412"),")"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"Map<Maker, List<VideogameConsole>> getAllConsolesByMaker()")," soll alle Konsolen gruppiert nach den Herstellern zur\xfcckgeben (",(0,l.kt)("em",{parentName:"li"},"MICROSOFT: ","[","VideoGameConsole","[","title=XBox 360, maker=MICROSOFT, lifespan=12, soldUnitsInMillions=85.81]"),",...],...)"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"Map<Maker, Double> getTotalSoldUnitsInMillionsPerMaker()")," soll die Anzahl verkaufter Einheiten pro Hersteller in Millionen zur\xfcckgeben (",(0,l.kt)("em",{parentName:"li"},"MICROSOFT: 137.07"),",...)")),(0,l.kt)(r.Z,{pullRequest:"71",branchSuffix:"stream-api/01",mdxType:"Exercise"}))}p.isMDXComponent=!0}}]);