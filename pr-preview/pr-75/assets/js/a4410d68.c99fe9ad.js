"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([[6602],{46132:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>d,toc:()=>t});var r=s(85893),i=s(11151);const a={title:"Geometrische Form",description:"",tags:["oo","inheritance","polymorphy","io-streams"]},l=void 0,d={id:"exam-exercises/exam-exercises-java1/shape",title:"Geometrische Form",description:"",source:"@site/docs/exam-exercises/exam-exercises-java1/shape.md",sourceDirName:"exam-exercises/exam-exercises-java1",slug:"/exam-exercises/exam-exercises-java1/shape",permalink:"/java-docs/pr-preview/pr-75/exam-exercises/exam-exercises-java1/shape",draft:!1,unlisted:!1,editUrl:"https://github.com/jappuccini/java-docs/tree/main/docs/exam-exercises/exam-exercises-java1/shape.md",tags:[{label:"oo",permalink:"/java-docs/pr-preview/pr-75/tags/oo"},{label:"inheritance",permalink:"/java-docs/pr-preview/pr-75/tags/inheritance"},{label:"polymorphy",permalink:"/java-docs/pr-preview/pr-75/tags/polymorphy"},{label:"io-streams",permalink:"/java-docs/pr-preview/pr-75/tags/io-streams"}],version:"current",frontMatter:{title:"Geometrische Form",description:"",tags:["oo","inheritance","polymorphy","io-streams"]},sidebar:"examExercisesSidebar",previous:{title:"Tiefgarage",permalink:"/java-docs/pr-preview/pr-75/exam-exercises/exam-exercises-java1/parking-garage"},next:{title:"Kurs",permalink:"/java-docs/pr-preview/pr-75/exam-exercises/exam-exercises-java1/student-course"}},c={},t=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweise zur Klasse Shape",id:"hinweise-zur-klasse-shape",level:2},{value:"Hinweise zur Klasse Circle",id:"hinweise-zur-klasse-circle",level:2},{value:"Hinweise zur Klasse Rectangle",id:"hinweise-zur-klasse-rectangle",level:2},{value:"Hinweise zur Klasse ShapeReader",id:"hinweise-zur-klasse-shapereader",level:2},{value:"Beispielhafter Aufbau der Formendatei",id:"beispielhafter-aufbau-der-formendatei",level:2}];function o(e){const n={code:"code",em:"em",h2:"h2",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine\nausf\xfchrbare Klasse."}),"\n",(0,r.jsx)(n.h2,{id:"klassendiagramm",children:"Klassendiagramm"}),"\n",(0,r.jsx)(n.mermaid,{value:"classDiagram\n    ShapeReader o-- Shape\n    Shape <|-- Circle\n    Shape <|-- Rectangle\n    Rectangle <|-- Square\n\n    class ShapeReader {\n        -shapes List~Shape~\n        +ShapeReader(file File)\n        +getCircles() List~Circle~\n        +getShapesWithMinArea(minAreaInCM2 double) List~Shape~\n    }\n\n    class Shape {\n        +getAreaInCM2() double\n        +getCircumferenceInCM() double\n    }\n\n    class Circle {\n        -rInCM double\n        +Circle(rInCM double)\n        +getAreaInCM2() double\n        +getCircumferenceInCM() double\n    }\n\n    class Rectangle {\n        -aInCM double\n        -bInCM double\n        +Rectangle(aInCM double, bInCM double)\n        +getAreaInCM2() double\n        +getCircumferenceInCM() double\n    }\n\n    class Square {\n        +Square(aInCM double)\n    }"}),"\n",(0,r.jsx)(n.h2,{id:"allgemeine-hinweise",children:"Allgemeine Hinweise"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und\nObject-Methoden dargestellt"}),"\n",(0,r.jsx)(n.li,{children:"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die\nObject-Methoden wie gewohnt implementiert werden"}),"\n",(0,r.jsxs)(n.li,{children:["Die statische Konstante ",(0,r.jsx)(n.code,{children:"PI"})," der Klasse ",(0,r.jsx)(n.code,{children:"Math"})," stellt die Kreiszahl Pi dar"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"hinweise-zur-klasse-shape",children:"Hinweise zur Klasse Shape"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getAreaInCM2()"})," soll den Wert ",(0,r.jsx)(n.em,{children:"0"})," zur\xfcckgeben"]}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getCircumferenceInCM()"})," soll den Wert ",(0,r.jsx)(n.em,{children:"0"})," zur\xfcckgeben"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"hinweise-zur-klasse-circle",children:"Hinweise zur Klasse Circle"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getAreaInCM2()"})," soll den Fl\xe4cheninhalt gem\xe4\xdf der Formel\n",(0,r.jsx)(n.em,{children:"Pi * r * r"})," berechnen und zur\xfcckgeben"]}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getCircumferenceInCM()"})," soll den Umfang gem\xe4\xdf der Formel\n",(0,r.jsx)(n.em,{children:"2 * Pi * r"})," berechnen und zur\xfcckgeben"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"hinweise-zur-klasse-rectangle",children:"Hinweise zur Klasse Rectangle"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getAreaInCM2()"})," soll den Fl\xe4cheninhalt gem\xe4\xdf der Formel\n",(0,r.jsx)(n.em,{children:"a * b"})," berechnen und zur\xfcckgeben"]}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"double getCircumferenceInCM()"})," soll den Umfang gem\xe4\xdf der Formel\n",(0,r.jsx)(n.em,{children:"2 * a + 2 * b"})," berechnen und zur\xfcckgeben"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"hinweise-zur-klasse-shapereader",children:"Hinweise zur Klasse ShapeReader"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Der Konstruktor soll der Formenliste (",(0,r.jsx)(n.code,{children:"shapes"}),") alle Formen der eingehenden\nDatei hinzuf\xfcgen"]}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"List<Circle> getCircles()"})," soll alle Kreise der Formenliste\n(",(0,r.jsx)(n.code,{children:"shapes"}),") zur\xfcckgeben"]}),"\n",(0,r.jsxs)(n.li,{children:["Die Methode ",(0,r.jsx)(n.code,{children:"List<Shape> getShapesWithMinArea(minAreaInCM2: double)"})," soll alle\nFormen der Formenliste (",(0,r.jsx)(n.code,{children:"shapes"}),") zur\xfcckgeben, die mindestens den eingehenden\nFl\xe4cheninhalt aufweisen"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"beispielhafter-aufbau-der-formendatei",children:"Beispielhafter Aufbau der Formendatei"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Circle;4\nSquare;5\nRectangle;3;4\nRectangle;1;7\nCircle;2\nCircle;3\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>l});var r=s(67294);const i={},a=r.createContext(i);function l(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);